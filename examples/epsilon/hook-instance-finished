#!/bin/bash
###############################################################################
# This hook is run for each candidate after all candidate
# configurations have been run on a single instance.
#
# Check the examples in examples/
#
# PARAMETERS:
# $1 is the instance name
# $2 is the candidate number
#
# RETURN VALUE:
# This hook should print a single numerical value
###############################################################################
INSTANCE=$1
CANDIDATE=$2

SLEEP_TIME=5
OUTPUTEXT=output
STDOUT=${CANDIDATE}.${OUTPUTEXT}
STDERR=${CANDIDATE}.stderr

cd arena || exit 1

#while [ ! -s ${NUMCAND}.output ]; do
#    sleep 1
#    let "SLEEP_TIME += 1"
#done

while ls *.running &> /dev/null; do
    sleep $SLEEP_TIME
done

while [ ! -s $STDERR ]; do
    sleep $SLEEP_TIME
done

if [ $(cat $STDERR) != OK ]; then
    exit 1
fi

# FIXME: Handle --upper-bound $UPPER --lower-bound $LOWER
if ! ls *.${OUTPUTEXT}_dat_nor &> /dev/null ; then
    ~/bin/transform.pl -f 1,2 *.${OUTPUTEXT} || exit 1
    ~/bin/nondominated --quiet -n "1 2" *.${OUTPUTEXT}_dat -s "_nor" || exit 1
    # Do not check this because nondominated exits with 1 if dominated points are found.
    cat *.${OUTPUTEXT}_dat_nor | ~/bin/nondominated -U --filter > reference 
    ~/bin/epsilon --quiet -r reference *.${OUTPUTEXT}_dat_nor -s "_e" || exit 1
fi

if COST=`cat ${STDOUT}_dat_nor_e | grep -e '^[0-9]' | cut -f1`; then
    echo "$COST"
    rm -f ${CANDIDATE}.*
    exit 0
else
    exit 1
fi
