[{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/DEVEL-README.html","id":"git-commands","dir":"","previous_headings":"","what":"Git commands","title":"README file for developers","text":"","code":"# See differences in your local copy git diff # Commit your changes to the local repository git commit -m \"Explain your changes\" # Update your local copy with changes from remote repository (github) git pull --rebase # Send your changes to the remote repository git push # See differences between branches git diff master # Merge changes from master into your branch git rebase -i master # Get help git help"},{"path":"https://mlopez-ibanez.github.io/irace/DEVEL-README.html","id":"developing-irace","dir":"","previous_headings":"","what":"Developing irace","title":"README file for developers","text":"make build Build irace make install Build install package make cran Check build acceptable CRAN make check thoroughly test build make quick-install minimal build install requirements possible. Designed installing machines used development, like IRIDIA’s cluster.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/DEVEL-README.html","id":"checking","dir":"","previous_headings":"","what":"CHECKING:","title":"README file for developers","text":"–-cran messages type: Undefined global functions variables: median p.adjust pchisq qt read.table recover rexp rnorm runif t.test wilcox.test can fixed running: adding result NAMESPACE. Namespaces newly imported also need listed Imports: field DESCRIPTION.","code":"imports_for_undefined_globals <- function(txt, lst, selective = TRUE) {   if(!missing(txt))       lst <- scan(what = character(), text = txt, quiet = TRUE)   nms <- lapply(lst, find)   ind <- sapply(nms, length) > 0L   imp <- split(lst[ind], substring(unlist(nms[ind]), 9L))   if(selective) {       sprintf(\"importFrom(%s)\",               vapply(Map(c, names(imp), imp),                      function(e)                          paste0(\"\\\"\", e, \"\\\"\", collapse = \", \"),                      \"\"))   } else {       sprintf(\"import(\\\"%s\\\")\", names(imp))   } } R> txt <- \"median p.adjust pchisq qt read.table recover rexp rnorm runif t.test    wilcox.test\"  R> writeLines(imports_for_undefined_globals(txt, selective = FALSE))"},{"path":"https://mlopez-ibanez.github.io/irace/DEVEL-README.html","id":"release-process","dir":"","previous_headings":"","what":"RELEASE Process:","title":"README file for developers","text":"TODO: See useful release steps : https://github.com/tidyverse/ggplot2/issues/4965 git status # make sure date clean make check # passes make releasecheck make examples # Takes hours. Inspect examples vignette. make revdepcheck # Takes hours make releasebuild # Inspect output strange files! make closeversion Update cran-comments.md make submit 11.package requires changes: Make changes. Repeat whole RELEASE process without bumping version number. 11.b package released CRAN: Bump version number DESCRIPTION NEWS.md. make build # update files new version.” git ci --m ” * Bump development version $NEW_VERSION” Announce release Google group: https://groups.google.com/d/forum/irace-package","code":""},{"path":"https://mlopez-ibanez.github.io/irace/DEVEL-README.html","id":"announce-email","dir":"","previous_headings":"","what":"Announce email","title":"README file for developers","text":"Dear irace users, Version 2.2 irace available CRAN: https://cran.r-project.org/package=irace significant bugfixes minor interface changes recommend users upgrade: NEWS entry Best wishes,","code":"Manuel López-Ibáñez."},{"path":"https://mlopez-ibanez.github.io/irace/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 2, June 1991Copyright © 1989, 1991 Free Software Foundation, Inc.,51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"licenses software designed take away freedom share change . contrast, GNU General Public License intended guarantee freedom share change free software–make sure software free users. General Public License applies Free Software Foundation’s software program whose authors commit using . (Free Software Foundation software covered GNU Lesser General Public License instead.) can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge service wish), receive source code can get want , can change software use pieces new free programs; know can things. protect rights, need make restrictions forbid anyone deny rights ask surrender rights. restrictions translate certain responsibilities distribute copies software, modify . example, distribute copies program, whether gratis fee, must give recipients rights . must make sure , , receive can get source code. must show terms know rights. protect rights two steps: (1) copyright software, (2) offer license gives legal permission copy, distribute /modify software. Also, author’s protection , want make certain everyone understands warranty free software. software modified someone else passed , want recipients know original, problems introduced others reflect original authors’ reputations. Finally, free program threatened constantly software patents. wish avoid danger redistributors free program individually obtain patent licenses, effect making program proprietary. prevent , made clear patent must licensed everyone’s free use licensed . precise terms conditions copying, distribution modification follow.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/LICENSE.html","id":"terms-and-conditions-for-copying-distribution-and-modification","dir":"","previous_headings":"","what":"TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION","title":"GNU General Public License","text":"0. License applies program work contains notice placed copyright holder saying may distributed terms General Public License. “Program”, , refers program work, “work based Program” means either Program derivative work copyright law: say, work containing Program portion , either verbatim modifications /translated another language. (Hereinafter, translation included without limitation term “modification”.) licensee addressed “”. Activities copying, distribution modification covered License; outside scope. act running Program restricted, output Program covered contents constitute work based Program (independent made running Program). Whether true depends Program . 1. may copy distribute verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice disclaimer warranty; keep intact notices refer License absence warranty; give recipients Program copy License along Program. may charge fee physical act transferring copy, may option offer warranty protection exchange fee. 2. may modify copy copies Program portion , thus forming work based Program, copy distribute modifications work terms Section 1 , provided also meet conditions: ) must cause modified files carry prominent notices stating changed files date change. b) must cause work distribute publish, whole part contains derived Program part thereof, licensed whole charge third parties terms License. c) modified program normally reads commands interactively run, must cause , started running interactive use ordinary way, print display announcement including appropriate copyright notice notice warranty (else, saying provide warranty) users may redistribute program conditions, telling user view copy License. (Exception: Program interactive normally print announcement, work based Program required print announcement.) requirements apply modified work whole. identifiable sections work derived Program, can reasonably considered independent separate works , License, terms, apply sections distribute separate works. distribute sections part whole work based Program, distribution whole must terms License, whose permissions licensees extend entire whole, thus every part regardless wrote . Thus, intent section claim rights contest rights work written entirely ; rather, intent exercise right control distribution derivative collective works based Program. addition, mere aggregation another work based Program Program (work based Program) volume storage distribution medium bring work scope License. 3. may copy distribute Program (work based , Section 2) object code executable form terms Sections 1 2 provided also one following: ) Accompany complete corresponding machine-readable source code, must distributed terms Sections 1 2 medium customarily used software interchange; , b) Accompany written offer, valid least three years, give third party, charge cost physically performing source distribution, complete machine-readable copy corresponding source code, distributed terms Sections 1 2 medium customarily used software interchange; , c) Accompany information received offer distribute corresponding source code. (alternative allowed noncommercial distribution received program object code executable form offer, accord Subsection b .) source code work means preferred form work making modifications . executable work, complete source code means source code modules contains, plus associated interface definition files, plus scripts used control compilation installation executable. However, special exception, source code distributed need include anything normally distributed (either source binary form) major components (compiler, kernel, ) operating system executable runs, unless component accompanies executable. distribution executable object code made offering access copy designated place, offering equivalent access copy source code place counts distribution source code, even though third parties compelled copy source along object code. 4. may copy, modify, sublicense, distribute Program except expressly provided License. attempt otherwise copy, modify, sublicense distribute Program void, automatically terminate rights License. However, parties received copies, rights, License licenses terminated long parties remain full compliance. 5. required accept License, since signed . However, nothing else grants permission modify distribute Program derivative works. actions prohibited law accept License. Therefore, modifying distributing Program (work based Program), indicate acceptance License , terms conditions copying, distributing modifying Program works based . 6. time redistribute Program (work based Program), recipient automatically receives license original licensor copy, distribute modify Program subject terms conditions. may impose restrictions recipients’ exercise rights granted herein. responsible enforcing compliance third parties License. 7. , consequence court judgment allegation patent infringement reason (limited patent issues), conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. distribute satisfy simultaneously obligations License pertinent obligations, consequence may distribute Program . example, patent license permit royalty-free redistribution Program receive copies directly indirectly , way satisfy License refrain entirely distribution Program. portion section held invalid unenforceable particular circumstance, balance section intended apply section whole intended apply circumstances. purpose section induce infringe patents property right claims contest validity claims; section sole purpose protecting integrity free software distribution system, implemented public license practices. Many people made generous contributions wide range software distributed system reliance consistent application system; author/donor decide willing distribute software system licensee impose choice. section intended make thoroughly clear believed consequence rest License. 8. distribution /use Program restricted certain countries either patents copyrighted interfaces, original copyright holder places Program License may add explicit geographical distribution limitation excluding countries, distribution permitted among countries thus excluded. case, License incorporates limitation written body License. 9. Free Software Foundation may publish revised /new versions General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies version number License applies “later version”, option following terms conditions either version later version published Free Software Foundation. Program specify version number License, may choose version ever published Free Software Foundation. 10. wish incorporate parts Program free programs whose distribution conditions different, write author ask permission. software copyrighted Free Software Foundation, write Free Software Foundation; sometimes make exceptions . decision guided two goals preserving free status derivatives free software promoting sharing reuse software generally.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/LICENSE.html","id":"no-warranty","dir":"","previous_headings":"","what":"NO WARRANTY","title":"GNU General Public License","text":"11. PROGRAM LICENSED FREE CHARGE, WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION. 12. EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MAY MODIFY /REDISTRIBUTE PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES. END TERMS CONDITIONS","code":""},{"path":"https://mlopez-ibanez.github.io/irace/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively convey exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program interactive, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, commands use may called something show w show c; even mouse-clicks menu items–whatever suits program. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. sample; alter names: General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA. Gnomovision version 69, Copyright (C) year name of author Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'. This is free software, and you are welcome to redistribute it under certain conditions; type `show c' for details. Yoyodyne, Inc., hereby disclaims all copyright interest in the program `Gnomovision' (which makes passes at compilers) written by James Hacker.  <signature of Ty Coon>, 1 April 1989 Ty Coon, President of Vice"},{"path":"https://mlopez-ibanez.github.io/irace/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Manuel López-Ibáñez. Author, maintainer. Jérémie Dubois-Lacoste. Author. Leslie Pérez Cáceres. Author. Thomas Stützle. Author. Mauro Birattari. Author. Eric Yuan. Contributor. Prasanna Balaprakash. Contributor. Nguyen Dang. Contributor.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Manuel López-Ibáñez, Jérémie Dubois-Lacoste, Leslie Pérez Cáceres, Thomas Stützle, Mauro Birattari. irace package: Iterated Racing Automatic Algorithm Configuration. Operations Research Perspectives, 3:43-58, 2016. doi:10.1016/j.orp.2016.09.002","code":"@Article{,   title = {The irace package: Iterated Racing for Automatic Algorithm Configuration},   author = {Manuel López-Ibáñez and Jérémie Dubois-Lacoste and Leslie {Pérez Cáceres} and Thomas Stützle and Mauro Birattari},   year = {2016},   journal = {Operations Research Perspectives},   doi = {10.1016/j.orp.2016.09.002},   volume = {3},   pages = {43--58}, }"},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"irace-iterated-racing-for-automatic-algorithm-configuration","dir":"","previous_headings":"","what":"Iterated Racing for Automatic Algorithm Configuration","title":"Iterated Racing for Automatic Algorithm Configuration","text":"[ Homepage ] [ User Guide (PDF) ] Maintainers: Manuel López-Ibáñez, Leslie Pérez Cáceres Creators: Manuel López-Ibáñez, Jérémie Dubois-Lacoste Contributors: Jérémie Dubois-Lacoste, Thomas Stützle, Mauro Birattari, Eric Yuan Prasanna Balaprakash. Contact: https://groups.google.com/d/forum/irace-package","code":""},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Iterated Racing for Automatic Algorithm Configuration","text":"irace package implements Iterated Race method, generalization Iterated F-race method automatic configuration optimization algorithms, , tuning parameters finding appropriate settings given set instances optimization problem. builds upon race package Birattari implemented R. Keywords: automatic configuration, offline tuning, parameter tuning, racing, F-race. Relevant literature: M. López-Ibáñez, J. Dubois-Lacoste, L. Pérez Cáceres, T. Stützle, M. Birattari. irace package: Iterated Racing Automatic Algorithm Configuration. Operations Research Perspectives, 3:43–58, 2016. [ bibtex | doi: 10.1016/j.orp.2016.09.002 ] Manuel López-Ibáñez, Jérémie Dubois-Lacoste, Thomas Stützle, Mauro Birattari. irace package, Iterated Race Automatic Algorithm Configuration. Technical Report TR/IRIDIA/2011-004, IRIDIA, Université libre de Bruxelles, Belgium, 2011. [ bibtex | PDF ] Thomas Stützle Manuel López-Ibáñez. Tutorial: Automated algorithm configuration design. GECCO ’21: Proceedings Genetic Evolutionary Computation Conference Companion, July 2021. doi:10.1145/3449726.3461404","code":""},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"requisites","dir":"","previous_headings":"","what":"Requisites","title":"Iterated Racing for Automatic Algorithm Configuration","text":"R (https://www.r-project.org) required running irace, don’t need know R language use .","code":""},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"user-guide","dir":"","previous_headings":"","what":"User guide","title":"Iterated Racing for Automatic Algorithm Configuration","text":"complete user guide comes package. can access online , installing irace package, invoking R following command: following quick-start guide. user guide gives detailed instructions.","code":"R> vignette(\"irace-package\")"},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"Iterated Racing for Automatic Algorithm Configuration","text":"Install R (favourite package manager, see details ). Install irace. command works CMD Powershell R added PATH (see detailed instructions ). Add irace path. windows user, step unfortunately involved, please see detailed instructions . Consider adding line ~/.bashrc, ~/.zshrc, ~/.profile persist sessions. can open user guide following command. command works CMD Powershell R added PATH (see detailed instructions ).","code":"$ Rscript -e \"install.packages('irace', repos='https://cloud.r-project.org')\" $ export PATH=\"$(Rscript -e \"cat(paste0(system.file(package='irace', 'bin', mustWork=TRUE), ':'))\" 2> /dev/null)${PATH}\" $ Rscript -e \"vignette('irace-package')\""},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"installing-r","dir":"","previous_headings":"","what":"Installing R","title":"Iterated Racing for Automatic Algorithm Configuration","text":"official instructions available https://cran.r-project.org/doc/manuals/r-release/R-admin.html. give quick R installation guide work cases.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"gnulinux","dir":"","previous_headings":"","what":"GNU/Linux","title":"Iterated Racing for Automatic Algorithm Configuration","text":"install R package manager. Debian/Ubuntu system something like: R installed, can launch R Terminal R prompt install irace package. See instructions .","code":"$ sudo apt-get install r-base"},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"os-x","dir":"","previous_headings":"","what":"OS X","title":"Iterated Racing for Automatic Algorithm Configuration","text":"can install R directly CRAN mirror (https://cran.r-project.org/bin/macosx/). Alternatively, use homebrew, can just (Using brew install r recommended build R source able use CRAN binary, possibly resulting annoying build failiures). R installed, can launch R Terminal (Applications), R prompt install irace package. See instructions .","code":"$ brew install --cask r"},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"windows","dir":"","previous_headings":"","what":"Windows","title":"Iterated Racing for Automatic Algorithm Configuration","text":"can install R CRAN mirror (https://cran.r-project.org/bin/windows/). R installed, can launch R console install irace package . See instructions . addition using R console, might useful add R PATH can run GUN/Linux shell commands without modification CMD Powershell. Usually, R installed C:\\Program Files\\R\\R-4.1.3 (version number depends installation). add following line PATH (want use 64-bit version) , 32-bit version","code":"C:\\Program Files\\R\\R-4.1.3\\bin\\x64 C:\\Program Files\\R\\R-4.1.3\\bin\\i386"},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"installing-the-irace-package","dir":"","previous_headings":"","what":"Installing the irace package","title":"Iterated Racing for Automatic Algorithm Configuration","text":"two methods installing irace R package computer: Install within R (automatic download): select mirror close , test installation Manually download package CRAN invoke command-line: <package> one three versions available: .tar.gz (Unix/BSD/GNU/Linux), .tgz (MacOS X), .zip (Windows). package fails install insufficient permissions, need force local installation : installed, test working : last command tells installation directory irace.","code":"$ R         R> install.packages(\"irace\") R> library(irace)         R> CTRL+d $ R CMD INSTALL <package> $ mkdir ~/R     $ R CMD INSTALL --library=~/R irace.tar.gz     $ export R_LIBS=~/R:${R_LIBS} $ R     R> library(irace)     R> cat(system.file(package=\"irace\", \"bin\", mustWork=TRUE), \"\\n\")     /home/user/R/irace/bin"},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"gnulinux-and-os-x","dir":"","previous_headings":"","what":"GNU/Linux and OS X","title":"Iterated Racing for Automatic Algorithm Configuration","text":"Save installation directory irace variable, add .bash_profile, .bashrc .profile: adding opening new terminal, able invoke irace follows:","code":"export IRACE_HOME=/home/user/R/irace/bin/ # Path given by system.file(package=\"irace\", \"bin\", mustWork=TRUE)     export PATH=${IRACE_HOME}:$PATH     # export R_LIBS=~/R:${R_LIBS} # Only if local installation was forced $ irace --help"},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"windows-1","dir":"","previous_headings":"","what":"Windows","title":"Iterated Racing for Automatic Algorithm Configuration","text":"can find irace binary installed running following Powershell CMD: output path, C:\\Program Files\\R\\R-4.1.3\\library\\irace\\bin\\x64 (replace x64 i386 32-bit system), can add PATH. running following work: can also launch irace opening R console executing:","code":"C:\\> Rscript -e \"cat(gsub('/', '\\\\\\\\', system.file(package='irace', 'bin', 'x64', mustWork=TRUE)))\" C:\\> irace --help R> library(irace)     R> irace.cmdline(\"--help\")"},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"github-development-version","dir":"","previous_headings":"","what":"GitHub (Development version)","title":"Iterated Racing for Automatic Algorithm Configuration","text":"wish try development version, can install executing following commands within R console:","code":"R> install.packages(\"devtools\")     R> devtools::install_github(\"MLopez-Ibanez/irace\")"},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"python","dir":"","previous_headings":"","what":"Python","title":"Iterated Racing for Automatic Algorithm Configuration","text":"can use irace R package Python using rpy2. example implementation iracepy.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Iterated Racing for Automatic Algorithm Configuration","text":"Create directory storing tuning scenario setup Initialize tuning directory template config files Modify generated files following instructions found within file. particular, scripts target-runner target-evaluator (need ) executable. output target-runner (target-evaluator use separate evaluation step) minimized default. wish maximize , just multiply value -1 within script. scenario.txt, uncomment assign parameters need value different default one. examples $IRACE_HOME/examples/. Put instances ~/tuning/Instances/. addition, can create file specifies instances directory run instance-specific parameters use. See scenario.txt instances-list.txt examples. command irace attempt create execution directory (execDir), must exist calling irace. default execDir current directory. Calling command: performs one run Iterated Race. See output irace --help additional irace parameters. Command-line parameters override scenario setup specified scenario.txt file.","code":"$ mkdir ~/tuning         $ cd ~/tuning $ $IRACE_HOME/bin/irace --init $ cd ~/tuning/ && $IRACE_HOME/bin/irace"},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"many-tuning-runs-in-parallel","dir":"","previous_headings":"","what":"Many tuning runs in parallel","title":"Iterated Racing for Automatic Algorithm Configuration","text":"executing several repetitions irace parallel, call program N number repetitions. default, execution directory run irace set ./execdir-dd, dd number padded zeroes. careful, parallel-irace create directories scratch, deleting first already exist. Check help parallel-irace running without parameters.","code":"$ cd ~/tuning/ && $IRACE_HOME/bin/parallel-irace N"},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"parallelize-one-tuning","dir":"","previous_headings":"","what":"Parallelize one tuning","title":"Iterated Racing for Automatic Algorithm Configuration","text":"single run irace can done much faster executing calls targetRunner (runs algorithm tuned) parallel. See user guide details.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Iterated Racing for Automatic Algorithm Configuration","text":"irace Copyright (C) 2010-2020 Manuel López-Ibáñez, Jérémie Dubois-Lacoste Leslie Pérez-Cáceres. program free software (software libre); can redistribute /modify terms GNU General Public License published Free Software Foundation; either version 2 License, (option) later version. program distributed hope useful, WITHOUT WARRANTY; without even implied warranty MERCHANTABILITY FITNESS PARTICULAR PURPOSE. See GNU General Public License details. IMPORTANT NOTE: Please aware fact program released Free Software excuse scientific propriety, obligates give appropriate credit! write scientific paper describing research made substantive use program, obligation scientist () mention fashion software used Methods section; (b) mention algorithm References section. appropriate citation : Manuel López-Ibáñez, Jérémie Dubois-Lacoste, Leslie Pérez Cáceres, Thomas Stützle, Mauro Birattari. irace package: Iterated Racing Automatic Algorithm Configuration. Operations Research Perspectives, 2016. doi: 10.1016/j.orp.2016.09.002 irace package uses code GPL race package Copyright (C) 2003 Mauro Birattari.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"building-an-irace-standalone-container","dir":"","previous_headings":"","what":"Building an irace standalone container","title":"Iterated Racing for Automatic Algorithm Configuration","text":"Thanks Singularity, can build standalone container irace using file irace.sindef available directory inst/ source tarball github repository , installing irace R package, installation directory given R expression system.file(package=\"irace\"). installing SingularityCE, container may build using: run :","code":"sudo singularity build irace.sindef irace.sif singularity run irace.sif <arguments>"},{"path":"https://mlopez-ibanez.github.io/irace/index.html","id":"frequently-asked-questions","dir":"","previous_headings":"","what":"Frequently Asked Questions","title":"Iterated Racing for Automatic Algorithm Configuration","text":"user guide contains list frequently asked questions.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/CommandArgsParser.html","id":null,"dir":"Reference","previous_headings":"","what":"R6 Class for parsing command-line arguments — CommandArgsParser","title":"R6 Class for parsing command-line arguments — CommandArgsParser","text":"R6 Class parsing command-line arguments R6 Class parsing command-line arguments cmdline_usage() prints output --help","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/CommandArgsParser.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for parsing command-line arguments — CommandArgsParser","text":"","code":"cmdline_usage(cmdline_args)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/CommandArgsParser.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"R6 Class for parsing command-line arguments — CommandArgsParser","text":"cmdline_args Definition command-line arguments.","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/CommandArgsParser.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"R6 Class for parsing command-line arguments — CommandArgsParser","text":"CommandArgsParser$new() CommandArgsParser$readCmdLineParameter() CommandArgsParser$readArg() CommandArgsParser$readAll() CommandArgsParser$cmdline_usage()","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/CommandArgsParser.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for parsing command-line arguments — CommandArgsParser","text":"","code":"CommandArgsParser$new(argv, argsdef)"},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/CommandArgsParser.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for parsing command-line arguments — CommandArgsParser","text":"","code":"CommandArgsParser$readCmdLineParameter(paramName, default = NULL)"},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/CommandArgsParser.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for parsing command-line arguments — CommandArgsParser","text":"","code":"CommandArgsParser$readArg(short = \"\", long = \"\")"},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/CommandArgsParser.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for parsing command-line arguments — CommandArgsParser","text":"","code":"CommandArgsParser$readAll()"},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/CommandArgsParser.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"R6 Class for parsing command-line arguments — CommandArgsParser","text":"","code":"CommandArgsParser$cmdline_usage()"},{"path":"https://mlopez-ibanez.github.io/irace/reference/ablation.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs ablation between two configurations (from source to target). — ablation","title":"Performs ablation between two configurations (from source to target). — ablation","text":"Ablation method analyzing differences two configurations.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/ablation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs ablation between two configurations (from source to target). — ablation","text":"","code":"ablation(   iraceResults,   src = 1L,   target = NULL,   ab.params = NULL,   type = c(\"full\", \"racing\"),   nrep = 1L,   seed = 1234567,   ablationLogFile = \"log-ablation.Rdata\",   instancesFile = \"train\",   ... )"},{"path":"https://mlopez-ibanez.github.io/irace/reference/ablation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performs ablation between two configurations (from source to target). — ablation","text":"iraceResults (list()|character(1)) iraceResults object created irace typically saved log file irace.Rdata. character string given, interpreted path log file iraceResults object loaded. src, target (integer(1)) Source target configuration IDs. default, first configuration ever evaluated (ID 1) used src best configuration found irace used target. ab.params Specific parameter names used ablation. must parameters$names. default, use parameters. type Type ablation perform: \"full\" execute configuration n_instances determine best-performing one; \"racing\" apply racing find best configurations. nrep (integer(1)) Number replications per instance used \"full\" ablation. seed (integer(1)) Integer value use seed random number generation. ablationLogFile (character(1)) Log file save ablation log. NULL, results saved file. instancesFile (character(1)) Instances file used ablation: 'train', 'test' filename containing list instances. ... arguments override scenario settings, e.g., debugLevel, parallel, etc.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/ablation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performs ablation between two configurations (from source to target). — ablation","text":"list containing following elements: configurations Configurations tested ablation. instances matrix instances used experiments. First column instances IDs iraceResults$scenario$instances, second column seed assigned instance. experiments matrix results experiments (columns configurations, rows instances). scenario Scenario object settings used experiments. trajectory IDs best configurations step ablation. best Best configuration found experiments.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/ablation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Performs ablation between two configurations (from source to target). — ablation","text":"C. Fawcett H. H. Hoos. Analysing differences algorithm configurations ablation. Journal Heuristics, 22(4):431–458, 2016.","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/ablation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Performs ablation between two configurations (from source to target). — ablation","text":"Leslie Pérez Cáceres Manuel López-Ibáñez","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/ablation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performs ablation between two configurations (from source to target). — ablation","text":"","code":"# \\donttest{ logfile <- system.file(package=\"irace\", \"exdata\", \"sann.rda\") # Execute ablation between the first and the best configuration found by irace. ablog <- ablation(logfile, ablationLogFile = NULL) #> # Using 'train' instances: #> 0.905957901944309 #> 0.902469281350014 #> 0.8794010207474 #> 0.907895068710683 #> 0.916852307185565 #> 0.873517032475681 #> 0.916154904168341 #> 0.90404662677975 #> 0.877740131292867 #> 0.930115968953727 #> 0.846496028413268 #> 0.892992064858745 #> 0.915439159656606 #> 0.906355640344911 #> 0.906024125613363 #> 0.911366126946273 #> 0.920713415081092 #> 0.951469993611223 #> 0.878823711274731 #> 0.90151342181266 #> 0.909554867725316 #> 0.900047598188116 #> 0.909482064441728 #> 0.884051686626106 #> 0.888753062309949 #> 0.913716603506617 #> 0.903626224459203 #> 0.913202083911995 #> 0.887724789609467 #> 0.855424818408689 #> 0.88393162254994 #> 0.896280759871139 #> 0.888397063305116 #> 0.916650354000404 #> 0.872874578021002 #> 0.903704671117983 #> 0.886108542423985 #> 0.923264746008518 #> 0.889109821485432 #> 0.893965622657807 #> 0.891499170823981 #> 0.887808230567988 #> 0.877822401853609 #> 0.909457170251758 #> 0.882400515575999 #> 0.894195922467773 #> 0.877007506350218 #> 0.883301401753859 #> 0.885132036302935 #> 0.921338754574316 #> 0.892094010461244 #> 0.893956211196302 #> 0.906365037481688 #> 0.904904190113314 #> 0.91867446106525 #> 0.881395849239001 #> 0.915294091987407 #> 0.893071094035849 #> 0.878962269075809 #> 0.916450751809122 #> 0.879516399969646 #> 0.912854302261512 #> 0.911496077459183 #> 0.889588222817896 #> 0.914001279770974 #> 0.905873290757714 #> 0.918453872103886 #> 0.8997174831509 #> 0.873159979809108 #> 0.901427323975439 #> 0.913159335832776 #> 0.937325548258897 #> 0.878446732725414 #> 0.897286565286713 #> 0.886861520223756 #> 0.906123087383946 #> 0.867036238112452 #> 0.892405421018199 #> 0.906932464294311 #> 0.881837205503938 #> 0.892986379124911 #> 0.885139304235181 #> 0.920504489668488 #> 0.932397620576399 #> 0.905790837159408 #> 0.922910534990185 #> 0.918359582132783 #> 0.900955143950951 #> 0.892246892932458 #> 0.893255807608885 #> 0.902128269054072 #> 0.892800401550236 #> 0.881918889428707 #> 0.887985923094311 #> 0.91102315939232 #> 0.918841838305647 #> 0.893604090461476 #> 0.916467879706061 #> 0.874436661337042 #> 0.922569111085509 #> # 2023-01-09 08:28:29 UTC: Starting ablation from 1 to 110 #> # Seed: 1234567 #> # Source configuration (row number is ID): #>   tmax    temp #> 1  165 10.4998 #> # Target configuration (row number is ID): #>     tmax   temp #> 110 3894 1.9203 #> # 2023-01-09 08:28:29 UTC: Executing source and target configurations on the given instances * nrep (100)... #> # Generating configurations (row number is ID): tmax temp  #>   tmax    temp #> 2 3894 10.4998 #> 3  165  1.9203 #> # 2023-01-09 08:28:36 UTC: Ablation (full) of 2 configurations on 100 instances. #> # Markers: #>      x No test is performed. #>      c Configurations are discarded only due to capping. #>      - The test is performed and some configurations are discarded. #>      = The test is performed but no configuration is discarded. #>      ! The test is performed and configurations could be discarded but elite configurations are preserved. #>      . All alive configurations are elite and nothing is discarded #>  #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> | |   Instance|      Alive|       Best|       Mean best| Exp so far|  W time|  rho|KenW|  Qvar| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> |x|          1|          2|          2|   0.07331528788|          2|00:00:00|   NA|  NA|    NA| #> |x|          2|          2|          2|    0.8829520487|          4|00:00:00|+1.00|1.00|0.0000| #> |x|          3|          2|          2|    0.6006905453|          6|00:00:00|+1.00|1.00|0.0000| #> |x|          4|          2|          2|     1.121401474|          8|00:00:00|+1.00|1.00|0.0000| #> |x|          5|          2|          2|     1.004739041|         10|00:00:00|+1.00|1.00|0.0000| #> |x|          6|          2|          2|    0.8567550774|         12|00:00:00|+1.00|1.00|0.0000| #> |x|          7|          2|          2|    0.9673145838|         14|00:00:00|+1.00|1.00|0.0000| #> |x|          8|          2|          2|     1.355976135|         16|00:00:00|+0.50|0.56|0.2500| #> |x|          9|          2|          2|     1.572207113|         18|00:00:00|+0.22|0.31|0.3889| #> |x|         10|          2|          2|     1.712802514|         20|00:00:00|+0.29|0.36|0.3556| #> |x|         11|          2|          2|     1.656726404|         22|00:00:00|+0.35|0.40|0.3273| #> |x|         12|          2|          2|     1.679632243|         24|00:00:00|+0.18|0.25|0.4091| #> |x|         13|          2|          2|     1.857928343|         26|00:00:00|+0.08|0.15|0.4615| #> |x|         14|          2|          2|     2.044732732|         28|00:00:00|+0.01|0.08|0.4945| #> |x|         15|          2|          2|     1.933895109|         30|00:00:00|-0.03|0.04|0.5143| #> |x|         16|          2|          2|     1.948890001|         32|00:00:00|+0.00|0.06|0.5000| #> |x|         17|          2|          2|     1.874067390|         34|00:00:00|-0.03|0.03|0.5147| #> |x|         18|          2|          2|     1.863374679|         36|00:00:00|-0.05|0.01|0.5229| #> |x|         19|          2|          2|     1.896879831|         38|00:00:00|-0.03|0.02|0.5146| #> |x|         20|          2|          2|     1.951168655|         40|00:00:00|-0.04|0.01|0.5211| #> |x|         21|          2|          2|     2.081975823|         42|00:00:00|-0.05|0.00|0.5238| #> |x|         22|          2|          2|     1.987708081|         44|00:00:00|-0.04|0.01|0.5195| #> |x|         23|          2|          2|     2.021492489|         46|00:00:00|-0.04|0.00|0.5217| #> |x|         24|          2|          2|     2.049312176|         48|00:00:00|-0.04|0.01|0.5181| #> |x|         25|          2|          2|     2.038291650|         50|00:00:00|-0.03|0.01|0.5133| #> |x|         26|          2|          2|     2.004433928|         52|00:00:00|-0.02|0.02|0.5077| #> |x|         27|          2|          2|     2.067748636|         54|00:00:00|-0.03|0.01|0.5128| #> |x|         28|          2|          2|     1.996535502|         56|00:00:00|-0.02|0.02|0.5079| #> |x|         29|          2|          2|     2.024426915|         58|00:00:00|-0.00|0.03|0.5025| #> |x|         30|          2|          2|     1.990730200|         60|00:00:00|-0.02|0.02|0.5080| #> |x|         31|          2|          2|     2.002179483|         62|00:00:00|-0.01|0.03|0.5032| #> |x|         32|          2|          2|     2.066618563|         64|00:00:00|+0.00|0.04|0.4980| #> |x|         33|          2|          2|     2.006483477|         66|00:00:00|+0.02|0.04|0.4924| #> |x|         34|          2|          2|     2.015546910|         68|00:00:00|+0.03|0.06|0.4866| #> |x|         35|          2|          2|     2.168884986|         70|00:00:00|+0.04|0.07|0.4807| #> |x|         36|          2|          2|     2.236168609|         72|00:00:00|+0.05|0.08|0.4746| #> |x|         37|          2|          2|     2.229494266|         74|00:00:00|+0.06|0.09|0.4685| #> |x|         38|          2|          2|     2.174887301|         76|00:00:00|+0.04|0.07|0.4780| #> |x|         39|          2|          2|     2.175665279|         78|00:00:00|+0.03|0.05|0.4858| #> |x|         40|          2|          2|     2.210673652|         80|00:00:00|+0.02|0.04|0.4923| #> |x|         41|          2|          2|     2.198790651|         82|00:00:00|+0.02|0.05|0.4878| #> |x|         42|          2|          2|     2.210376136|         84|00:00:00|+0.03|0.06|0.4832| #> |x|         43|          2|          2|     2.207862543|         86|00:00:00|+0.04|0.07|0.4784| #> |x|         44|          2|          2|     2.183377728|         88|00:00:00|+0.05|0.07|0.4736| #> |x|         45|          2|          2|     2.210788007|         90|00:00:00|+0.04|0.06|0.4808| #> |x|         46|          2|          2|     2.182918840|         92|00:00:00|+0.03|0.05|0.4870| #> |x|         47|          2|          2|     2.237598057|         94|00:00:00|+0.03|0.05|0.4829| #> |x|         48|          2|          2|     2.258158885|         96|00:00:00|+0.04|0.06|0.4787| #> |x|         49|          2|          2|     2.329027886|         98|00:00:00|+0.03|0.05|0.4847| #> |x|         50|          2|          2|     2.378118804|        100|00:00:00|+0.04|0.06|0.4808| #> |x|         51|          2|          2|     2.378946994|        102|00:00:00|+0.05|0.06|0.4769| #> |x|         52|          2|          2|     2.399889053|        104|00:00:00|+0.05|0.07|0.4729| #> |x|         53|          2|          2|     2.449499647|        106|00:00:00|+0.04|0.06|0.4790| #> |x|         54|          2|          2|     2.459530977|        108|00:00:00|+0.03|0.05|0.4843| #> |x|         55|          2|          2|     2.450910014|        110|00:00:00|+0.04|0.06|0.4808| #> |x|         56|          2|          2|     2.490392433|        112|00:00:00|+0.03|0.05|0.4857| #> |x|         57|          2|          2|     2.448258120|        114|00:00:00|+0.02|0.04|0.4900| #> |x|         58|          2|          2|     2.477048054|        116|00:00:00|+0.03|0.04|0.4870| #> |x|         59|          2|          2|     2.514640105|        118|00:00:00|+0.03|0.05|0.4839| #> |x|         60|          2|          2|     2.577777028|        120|00:00:00|+0.02|0.04|0.4881| #> |x|         61|          2|          2|     2.613538725|        122|00:00:00|+0.03|0.05|0.4852| #> |x|         62|          2|          2|     2.685817530|        124|00:00:00|+0.02|0.04|0.4892| #> |x|         63|          2|          2|     2.710493939|        126|00:00:00|+0.01|0.03|0.4926| #> |x|         64|          2|          2|     2.675012688|        128|00:00:00|+0.02|0.04|0.4901| #> |x|         65|          2|          2|     2.656514749|        130|00:00:00|+0.03|0.04|0.4875| #> |x|         66|          2|          2|     2.696171906|        132|00:00:00|+0.03|0.04|0.4848| #> |x|         67|          2|          2|     2.700872343|        134|00:00:00|+0.02|0.04|0.4885| #> |x|         68|          2|          2|     2.714161161|        136|00:00:00|+0.02|0.03|0.4917| #> |x|         69|          2|          2|     2.682576964|        138|00:00:00|+0.02|0.04|0.4893| #> |x|         70|          2|          2|     2.684343931|        140|00:00:00|+0.03|0.04|0.4870| #> |x|         71|          2|          2|     2.657493220|        142|00:00:00|+0.03|0.04|0.4845| #> |x|         72|          2|          2|     2.686722509|        144|00:00:00|+0.02|0.04|0.4879| #> |x|         73|          2|          2|     2.675402306|        146|00:00:00|+0.03|0.04|0.4855| #> |x|         74|          2|          2|     2.662704052|        148|00:00:00|+0.03|0.05|0.4832| #> |x|         75|          2|          2|     2.665311855|        150|00:00:00|+0.03|0.04|0.4865| #> |x|         76|          2|          2|     2.651325583|        152|00:00:00|+0.03|0.04|0.4842| #> |x|         77|          2|          2|     2.684067635|        154|00:00:00|+0.03|0.04|0.4874| #> |x|         78|          2|          2|     2.716850830|        156|00:00:00|+0.03|0.04|0.4852| #> |x|         79|          2|          2|     2.683419512|        158|00:00:00|+0.03|0.05|0.4830| #> |x|         80|          2|          2|     2.687864345|        160|00:00:00|+0.04|0.05|0.4807| #> |x|         81|          2|          2|     2.654849061|        162|00:00:00|+0.04|0.06|0.4784| #> |x|         82|          2|          2|     2.658799292|        164|00:00:00|+0.05|0.06|0.4761| #> |x|         83|          2|          2|     2.633502121|        166|00:00:00|+0.05|0.06|0.4737| #> |x|         84|          2|          2|     2.621592220|        168|00:00:00|+0.05|0.06|0.4773| #> |x|         85|          2|          2|     2.602730617|        170|00:00:00|+0.04|0.05|0.4807| #> |x|         86|          2|          2|     2.580202490|        172|00:00:00|+0.04|0.05|0.4785| #> |x|         87|          2|          2|     2.631557559|        174|00:00:00|+0.05|0.06|0.4763| #> |x|         88|          2|          2|     2.614446027|        176|00:00:00|+0.04|0.05|0.4796| #> |x|         89|          2|          2|     2.618230937|        178|00:00:00|+0.04|0.06|0.4775| #> |x|         90|          2|          2|     2.594181641|        180|00:00:00|+0.05|0.06|0.4754| #> |x|         91|          2|          2|     2.583776390|        182|00:00:00|+0.04|0.05|0.4786| #> |x|         92|          2|          2|     2.581534598|        184|00:00:00|+0.05|0.06|0.4766| #> |x|         93|          2|          2|     2.584683982|        186|00:00:00|+0.05|0.06|0.4745| #> |x|         94|          2|          2|     2.575924603|        188|00:00:00|+0.06|0.07|0.4724| #> |x|         95|          2|          2|     2.612368743|        190|00:00:00|+0.06|0.07|0.4703| #> |x|         96|          2|          2|     2.586847427|        192|00:00:00|+0.06|0.07|0.4682| #> |x|         97|          2|          2|     2.581796924|        194|00:00:00|+0.06|0.07|0.4716| #> |x|         98|          2|          2|     2.578574676|        196|00:00:00|+0.06|0.07|0.4696| #> |x|         99|          2|          2|     2.589342911|        198|00:00:00|+0.05|0.06|0.4729| #> |-|        100|          1|          2|     2.591032892|        200|00:00:00|   NA|  NA|    NA| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> Best-so-far configuration:           2    mean value:      2.591032892 #> Description of the best-so-far configuration: #>   .ID. tmax    temp .PARENT. #> 2    2 3894 10.4998        1 #>  #> # Best changed parameters: #> # tmax : 165 -> 3894  #> # 2023-01-09 08:28:44 UTC: Final best configuration: #>   tmax   temp #> 4 3894 1.9203 plotAblation(ablog)  # Execute ablation between two selected configurations, and selecting only a # subset of parameters, directly reading the setup from the irace log file. ablog <- ablation(logfile, src = 1, target = 10,                   ab.params = c(\"temp\"), ablationLogFile = NULL) #> # Using 'train' instances: #> 0.905957901944309 #> 0.902469281350014 #> 0.8794010207474 #> 0.907895068710683 #> 0.916852307185565 #> 0.873517032475681 #> 0.916154904168341 #> 0.90404662677975 #> 0.877740131292867 #> 0.930115968953727 #> 0.846496028413268 #> 0.892992064858745 #> 0.915439159656606 #> 0.906355640344911 #> 0.906024125613363 #> 0.911366126946273 #> 0.920713415081092 #> 0.951469993611223 #> 0.878823711274731 #> 0.90151342181266 #> 0.909554867725316 #> 0.900047598188116 #> 0.909482064441728 #> 0.884051686626106 #> 0.888753062309949 #> 0.913716603506617 #> 0.903626224459203 #> 0.913202083911995 #> 0.887724789609467 #> 0.855424818408689 #> 0.88393162254994 #> 0.896280759871139 #> 0.888397063305116 #> 0.916650354000404 #> 0.872874578021002 #> 0.903704671117983 #> 0.886108542423985 #> 0.923264746008518 #> 0.889109821485432 #> 0.893965622657807 #> 0.891499170823981 #> 0.887808230567988 #> 0.877822401853609 #> 0.909457170251758 #> 0.882400515575999 #> 0.894195922467773 #> 0.877007506350218 #> 0.883301401753859 #> 0.885132036302935 #> 0.921338754574316 #> 0.892094010461244 #> 0.893956211196302 #> 0.906365037481688 #> 0.904904190113314 #> 0.91867446106525 #> 0.881395849239001 #> 0.915294091987407 #> 0.893071094035849 #> 0.878962269075809 #> 0.916450751809122 #> 0.879516399969646 #> 0.912854302261512 #> 0.911496077459183 #> 0.889588222817896 #> 0.914001279770974 #> 0.905873290757714 #> 0.918453872103886 #> 0.8997174831509 #> 0.873159979809108 #> 0.901427323975439 #> 0.913159335832776 #> 0.937325548258897 #> 0.878446732725414 #> 0.897286565286713 #> 0.886861520223756 #> 0.906123087383946 #> 0.867036238112452 #> 0.892405421018199 #> 0.906932464294311 #> 0.881837205503938 #> 0.892986379124911 #> 0.885139304235181 #> 0.920504489668488 #> 0.932397620576399 #> 0.905790837159408 #> 0.922910534990185 #> 0.918359582132783 #> 0.900955143950951 #> 0.892246892932458 #> 0.893255807608885 #> 0.902128269054072 #> 0.892800401550236 #> 0.881918889428707 #> 0.887985923094311 #> 0.91102315939232 #> 0.918841838305647 #> 0.893604090461476 #> 0.916467879706061 #> 0.874436661337042 #> 0.922569111085509 #> # 2023-01-09 08:28:44 UTC: Starting ablation from 1 to 10 #> # Seed: 1234567 #> # Source configuration (row number is ID): #>   tmax    temp #> 1  165 10.4998 #> # Target configuration (row number is ID): #>    tmax    temp #> 10 3832 19.5944 #> # 2023-01-09 08:28:44 UTC: Executing source and target configurations on the given instances * nrep (100)... #> # 2023-01-09 08:28:51 UTC: Final best configuration: #>   tmax    temp #> 2 3832 19.5944 plotAblation(ablog)  # }"},{"path":"https://mlopez-ibanez.github.io/irace/reference/ablation_cmdline.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch ablation with command-line options. — ablation_cmdline","title":"Launch ablation with command-line options. — ablation_cmdline","text":"Launch ablation() command-line options command-line executable (ablation.exe Windows).","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/ablation_cmdline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch ablation with command-line options. — ablation_cmdline","text":"","code":"ablation_cmdline(argv = commandArgs(trailingOnly = TRUE))"},{"path":"https://mlopez-ibanez.github.io/irace/reference/ablation_cmdline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch ablation with command-line options. — ablation_cmdline","text":"argv (character())  arguments provided R command line character vector, e.g., c(\"-\", \"irace.Rdata\", \"--src\", 1).","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/ablation_cmdline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch ablation with command-line options. — ablation_cmdline","text":"list containing following elements: configurations Configurations tested ablation. instances matrix instances used experiments. First column instances IDs iraceResults$scenario$instances, second column seed assigned instance. experiments matrix results experiments (columns configurations, rows instances). scenario Scenario object settings used experiments. trajectory IDs best configurations step ablation. best Best configuration found experiments.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/ablation_cmdline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Launch ablation with command-line options. — ablation_cmdline","text":"function reads parameters given command line used invoke R, launches ablation() possibly plotAblation(). List command-line options:","code":"-l,--log-file            Path to the (.Rdata) file created by irace from which                          the \"iraceResults\" object will be loaded. -S,--src                 Source configuration ID. Default: 1. -T,--target              Target configuration ID. By default the best                          configuration found by irace. -P,--params              Specific parameter names to be used for the ablation                          (separated with commas). By default use all -t,--type                Type of ablation to perform: \"full\" will execute each                          configuration on all \"--n-instances\" to determine the                          best-performing one; \"racing\" will apply racing to                          find the best configurations. Default: full. -n,--nrep                Number of replications per instance used in \"full\"                          ablation. Default: 1.    --seed                Integer value to use as seed for the random number                          generation. Default: 1234567. -o,--output-file         Log file to save the ablation log. If \"\", the results                          are not saved to a file. Default: log-ablation.Rdata.    --instances-file      Instances file used for ablation: \"train\", \"test\" or a                          filename containing the list of instances. Default:                          train. -p,--plot                Output filename (.pdf) for the plot. If not given, no                          plot is created. -O,--plot-type           Type of plot. Supported values are \"mean\", \"boxplot\",                          \"rank\" or \"rank,boxplot\". Default: mean.    --old-path            Old path found in the log-file (.Rdata) given as input                          to be replaced by --new-path.    --new-path            New path to replace the path found in the log-file                          (.Rdata) given as input. -e,--exec-dir            Directory where the target runner will be run. -s,--scenario            Scenario file to override the scenario given in the                          log-file (.Rdata)    --parallel            Number of calls to targetRunner to execute in                          parallel. Values 0 or 1 mean no parallelization."},{"path":"https://mlopez-ibanez.github.io/irace/reference/ablation_cmdline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Launch ablation with command-line options. — ablation_cmdline","text":"Manuel López-Ibáñez","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/ablation_cmdline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch ablation with command-line options. — ablation_cmdline","text":"","code":"# ablation_cmdline(\"--help\")"},{"path":"https://mlopez-ibanez.github.io/irace/reference/buildCommandLine.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a command-line representation of a configuration — buildCommandLine","title":"Generate a command-line representation of a configuration — buildCommandLine","text":"buildCommandLine receives two vectors, one containing values parameters, containing switches parameters. builds string switches values can used command line call program tuned, thus generating one candidate configuration.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/buildCommandLine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a command-line representation of a configuration — buildCommandLine","text":"","code":"buildCommandLine(values, switches)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/buildCommandLine.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a command-line representation of a configuration — buildCommandLine","text":"values vector containing value parameter candidate configuration. switches vector containing switches paramter (order corresponds values vector).","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/buildCommandLine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a command-line representation of a configuration — buildCommandLine","text":"string concatenating element switches values parameters space pair parameters (none switches corresponding values).","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/buildCommandLine.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate a command-line representation of a configuration — buildCommandLine","text":"Manuel López-Ibáñez Jérémie Dubois-Lacoste","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/buildCommandLine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a command-line representation of a configuration — buildCommandLine","text":"","code":"switches <- c(\"--switch1 \", \"--switch2-\", \"--switch3=\") values <- list(\"value_1\", 1L, sqrt(2)) buildCommandLine (values, switches) #> [1] \"--switch1 value_1 --switch2-1 --switch3=1.4142135623731\" ## Build a command-line from the results produced by a previous run of irace. # First, load the data produced by irace. irace.logfile <- file.path(system.file(package=\"irace\"),                            \"exdata\", \"irace-acotsp.Rdata\") load(irace.logfile) allConfigurations <- iraceResults$allConfigurations parameters <- iraceResults$parameters apply(allConfigurations[1:10, unlist(parameters$names)], 1, buildCommandLine,       unlist(parameters$switches)) #>                                                                                                                1  #>                                      \"--as --localsearch 0 --alpha 1.0000 --beta 1.0000 --rho  0.9500 --ants 10\"  #>                                                                                                                2  #>       \"--acs --localsearch 3 --alpha 1.1275 --beta 3.3469 --rho  0.6471 --ants 36 --nnls 43 --q0 0.9053 --dlb 0\"  #>                                                                                                                3  #> \"--eas --localsearch 3 --alpha 3.7246 --beta 5.5153 --rho  0.5998 --ants 75 --nnls 29 --dlb 1 --elitistants  91\"  #>                                                                                                                4  #>     \"--ras --localsearch 1 --alpha 4.8395 --beta 5.9323 --rho  0.7610 --ants  5 --nnls 40 --dlb 0 --rasranks 61\"  #>                                                                                                                5  #>     \"--ras --localsearch 3 --alpha 4.2077 --beta 5.2256 --rho  0.7607 --ants 22 --nnls  8 --dlb 1 --rasranks 49\"  #>                                                                                                                6  #>                  \"--mmas --localsearch 3 --alpha 1.6813 --beta 7.1353 --rho  0.9089 --ants 16 --nnls 26 --dlb 1\"  #>                                                                                                                7  #>                    \"--as --localsearch 2 --alpha 2.8519 --beta 7.3960 --rho  0.6928 --ants 40 --nnls  8 --dlb 1\"  #>                                                                                                                8  #> \"--eas --localsearch 1 --alpha 3.0019 --beta 7.9433 --rho  0.4756 --ants 15 --nnls 11 --dlb 1 --elitistants 336\"  #>                                                                                                                9  #> \"--eas --localsearch 1 --alpha 3.9897 --beta 0.7250 --rho  0.5477 --ants 67 --nnls 28 --dlb 0 --elitistants 350\"  #>                                                                                                               10  #>       \"--acs --localsearch 1 --alpha 3.9875 --beta 0.2808 --rho  0.4399 --ants  7 --nnls 27 --q0 0.7146 --dlb 1\""},{"path":"https://mlopez-ibanez.github.io/irace/reference/checkIraceScenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Test that the given irace scenario can be run. — checkIraceScenario","title":"Test that the given irace scenario can be run. — checkIraceScenario","text":"Test given irace scenario can run checking scenario settings provided trying run target-algorithm.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/checkIraceScenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test that the given irace scenario can be run. — checkIraceScenario","text":"","code":"checkIraceScenario(scenario, parameters)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/checkIraceScenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test that the given irace scenario can be run. — checkIraceScenario","text":"scenario (list())  Data structure containing irace settings. data structure one returned function defaultScenario() readScenario(). parameters (list())  Data structure containing parameter space definition. data structure similar one returned function readParameters.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/checkIraceScenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test that the given irace scenario can be run. — checkIraceScenario","text":"returns TRUE successful gives error returns FALSE otherwise.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/checkIraceScenario.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test that the given irace scenario can be run. — checkIraceScenario","text":"parameters argument missing, parameters read file parameterFile  given scenario. parameters provided, parameterFile read.  function try execute target-algorithm.","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/checkIraceScenario.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test that the given irace scenario can be run. — checkIraceScenario","text":"Manuel López-Ibáñez Jérémie Dubois-Lacoste","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/checkParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"checkParameters — checkParameters","title":"checkParameters — checkParameters","text":"FIXME: incomplete, now repair inputs previous irace versions.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/checkParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checkParameters — checkParameters","text":"","code":"checkParameters(parameters)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/checkParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checkParameters — checkParameters","text":"parameters (list())  Data structure containing parameter space definition. data structure similar one returned function readParameters.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/checkScenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and correct the given scenario — checkScenario","title":"Check and correct the given scenario — checkScenario","text":"Checks errors (possibly incomplete) scenario setup irace  transforms valid scenario.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/checkScenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and correct the given scenario — checkScenario","text":"","code":"checkScenario(scenario = defaultScenario())"},{"path":"https://mlopez-ibanez.github.io/irace/reference/checkScenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and correct the given scenario — checkScenario","text":"scenario (list())  Data structure containing irace settings. data structure one returned function defaultScenario() readScenario().","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/checkScenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and correct the given scenario — checkScenario","text":"scenario received parameter, possibly corrected. Unset scenario settings set default values.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/checkScenario.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check and correct the given scenario — checkScenario","text":"function checks directories file names provided required irace exist. also checks settings proper type, e.g. settings expected integers really integers. Finally, also checks inconsistency settings.  error found prevents irace running properly, stop error.","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/checkScenario.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Check and correct the given scenario — checkScenario","text":"Manuel López-Ibáñez Jérémie Dubois-Lacoste","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/check_output_target_runner.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the output of the target runner and repair it if possible. If the\noutput is incorrect, this function will throw an error. — check_output_target_runner","title":"Check the output of the target runner and repair it if possible. If the\noutput is incorrect, this function will throw an error. — check_output_target_runner","text":"Check output target runner repair possible. output incorrect, function throw error.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/check_output_target_runner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the output of the target runner and repair it if possible. If the\noutput is incorrect, this function will throw an error. — check_output_target_runner","text":"","code":"check_output_target_runner(output, scenario)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/check_output_target_runner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the output of the target runner and repair it if possible. If the\noutput is incorrect, this function will throw an error. — check_output_target_runner","text":"output output target runner. scenario (list())  Data structure containing irace settings. data structure one returned function defaultScenario() readScenario().","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/check_output_target_runner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the output of the target runner and repair it if possible. If the\noutput is incorrect, this function will throw an error. — check_output_target_runner","text":"output contents repaired.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/configurations.print.command.html","id":null,"dir":"Reference","previous_headings":"","what":"Print configurations as command-line strings. — configurations.print.command","title":"Print configurations as command-line strings. — configurations.print.command","text":"Prints configurations converting representation command-line.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/configurations.print.command.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print configurations as command-line strings. — configurations.print.command","text":"","code":"configurations.print.command(configurations, parameters)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/configurations.print.command.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print configurations as command-line strings. — configurations.print.command","text":"configurations (data.frame)  Parameter configurations target algorithm (one per row). parameters (list())  Data structure containing parameter space definition. data structure similar one returned function readParameters.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/configurations.print.command.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print configurations as command-line strings. — configurations.print.command","text":"None.","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/configurations.print.command.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print configurations as command-line strings. — configurations.print.command","text":"Manuel López-Ibáñez Jérémie Dubois-Lacoste","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/configurations.print.html","id":null,"dir":"Reference","previous_headings":"","what":"Print configurations as a data frame — configurations.print","title":"Print configurations as a data frame — configurations.print","text":"Print configurations data frame","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/configurations.print.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print configurations as a data frame — configurations.print","text":"","code":"configurations.print(configurations, metadata = FALSE)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/configurations.print.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print configurations as a data frame — configurations.print","text":"configurations (data.frame)  Parameter configurations target algorithm (one per row). metadata Boolean specifying whether print metadata . metadata data configurations (additionally value parameter) used irace.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/configurations.print.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print configurations as a data frame — configurations.print","text":"None.","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/configurations.print.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print configurations as a data frame — configurations.print","text":"Manuel López-Ibáñez Jérémie Dubois-Lacoste","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/defaultScenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Default scenario settings — defaultScenario","title":"Default scenario settings — defaultScenario","text":"Return scenario object default values.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/defaultScenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default scenario settings — defaultScenario","text":"","code":"defaultScenario(scenario = list(), params_def = .irace.params.def)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/defaultScenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default scenario settings — defaultScenario","text":"scenario (list())  Data structure containing irace settings. data structure one returned function defaultScenario() readScenario(). params_def (data.frame())  Definition options accepted scenario. modified packages wish extend irace.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/defaultScenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default scenario settings — defaultScenario","text":"list indexed irace parameter names, containing default values parameter, except already present scenario passed argument. scenario list contains following elements: General options: scenarioFile Path file describes configuration scenario setup irace settings. (Default: \"./scenario.txt\") execDir Directory programs run. (Default: \"./\") logFile File save tuning results R dataset, either absolute path relative execDir. (Default: \"./irace.Rdata\") quiet Reduce output generated irace minimum. (Default: 0) debugLevel Debug level output irace. Set 0 silence debug messages. Higher values provide verbose debug messages. (Default: 0) seed Seed random number generator (default, generate random seed). (Default: NA) repairConfiguration User-defined R function takes configuration generated irace repairs . (Default: \"\") postselection Percentage configuration budget used perform postselection race best configurations iteration execution irace. (Default: 0) aclib Enable/disable AClib mode. option enables compatibility GenericWrapper4AC targetRunner script. (Default: 0) Elitist irace: elitist Enable/disable elitist irace. (Default: 1) elitistNewInstances Number instances added execution list previous instances elitist irace. (Default: 1) elitistLimit elitist irace, maximum number per race elimination tests eliminate configuration. Use 0 limit. (Default: 2) Internal irace options: sampleInstances Randomly sample training instances use order given. (Default: 1) softRestart Enable/disable soft restart strategy avoids premature convergence probabilistic model. (Default: 1) softRestartThreshold Soft restart threshold value numerical parameters. NA, NULL \"\", computed 10^-digits. (Default: \"\") nbIterations Maximum number iterations. (Default: 0) nbExperimentsPerIteration Number runs target algorithm per iteration. (Default: 0) minNbSurvival Minimum number configurations needed continue execution race (iteration). (Default: 0) nbConfigurations Number configurations sampled evaluated iteration. (Default: 0) mu Parameter used define number configurations sampled evaluated iteration. (Default: 5) Target algorithm parameters: parameterFile File contains description parameters target algorithm. (Default: \"./parameters.txt\") forbiddenExps Vector R logical expressions evaluate TRUE evaluated configuration. (Default: \"\") forbiddenFile File contains list logical expressions TRUE evaluated configuration. empty NULL, use forbidden expressions. (Default: \"\") digits Maximum number decimal places significant numerical (real) parameters. (Default: 4) Target algorithm execution: targetRunner Executable called configuration executes target algorithm tuned. See templates examples provided. (Default: \"./target-runner\") targetRunnerLauncher Executable used launch target runner, targetRunner executed directly (e.g., Python script Windows). (Default: \"\") targetCmdline Command-line arguments provided targetRunner (targetRunnerLauncher defined). substrings {configurationID}, {instanceID},  {seed},  {instance}, {bound} replaced corresponding values. substring {targetRunnerArgs} replaced concatenation switch value active parameters particular configuration evaluated.  substring {targetRunner}, present, replaced value targetRunner (useful using targetRunnerLauncher). (Default: \"{configurationID} {instanceID} {seed} {instance} {bound} {targetRunnerArgs}\") targetRunnerRetries Number times retry call targetRunner call failed. (Default: 0) targetRunnerData Optional data passed targetRunner. ignored default targetRunner function, may used custom targetRunner functions pass persistent data around. (Default: \"\") targetRunnerParallel Optional R function provide custom parallelization targetRunner. (Default: \"\") targetEvaluator Optional script R function provides numeric value configuration. See templates/target-evaluator.tmpl (Default: \"\") deterministic target algorithm deterministic, configurations evaluated per instance. (Default: 0) parallel Number calls targetRunner execute parallel. Values 0 1 mean parallelization. (Default: 0) loadBalancing Enable/disable load-balancing executing experiments parallel. Load-balancing makes better use computing resources, increases communication overhead. overhead large, disabling load-balancing may faster. (Default: 1) mpi Enable/disable MPI. Use Rmpi execute targetRunner parallel (parameter parallel number slaves). (Default: 0) batchmode Specify irace waits jobs finish targetRunner submits jobs batch cluster: sge, pbs, torque, slurm htcondor. targetRunner must submit jobs cluster using, example, qsub. (Default: 0) Initial configurations: initConfigurations Data frame describing initial configurations (usually read file using readConfigurations). (Default: \"\") configurationsFile File contains table initial configurations. empty NULL, initial configurations randomly generated. (Default: \"\") Training instances: instances Character vector instances used targetRunner. (Default: \"\") trainInstancesDir Directory training instances located; either absolute path relative current directory. trainInstancesFiles provided, files trainInstancesDir listed instances. (Default: \"./Instances\") trainInstancesFile File contains list training instances optionally additional parameters . trainInstancesDir provided, irace search files folder. (Default: \"\") blockSize Number training instances, make block' \\code{trainInstancesFile}. Elimination configurations performed evaluating complete block never middle block. block typically contains one instance instance class (type family). (Default: 1)} } \\item Tuning budget: \\describe{ \\item{maxExperiments}{Maximum number runs (invocations \\code{targetRunner}) performed. determines maximum budget experiments tuning. (Default: 0)} \\item{maxTime}{Maximum total execution time seconds executions \\code{targetRunner}. \\code{targetRunner} must return two values: cost time. (Default: 0)} \\item{budgetEstimation}{Fraction (smaller 1) budget used estimate mean computation time configuration. used \\code{maxTime} > 0 (Default: 0.02)} \\item{minMeasurableTime}{Minimum time unit still (significantly) measureable. (Default: 0.01)} } \\item Statistical test: \\describe{ \\item{testType}{Statistical test used elimination. default value selects \\code{t-test} \\code{capping} enabled \\code{F-test}, otherwise. Valid values : F-test (Friedman test), t-test (pairwise t-tests correction), t-test-bonferroni (t-test Bonferroni's correction multiple comparisons), t-test-holm (t-test Holm's correction multiple comparisons). (Default: \"\")} \\item{firstTest}{Number instances evaluated first elimination test. must multiple \\code{eachTest}. (Default: 5)} \\item{eachTest}{Number instances evaluated elimination tests. (Default: 1)} \\item{confidence}{Confidence level elimination test. (Default: 0.95)} } \\item Adaptive capping: \\describe{ \\item{capping}{Enable use adaptive capping, technique designed minimizing computation time configurations. Capping enabled default \\code{elitist} active, \\code{maxTime > 0}  \\code{boundMax > 0}. (Default: NA)} \\item{cappingType}{Measure used obtain execution bound performance elite configurations.\\itemize{\\item median: Median performance elite configurations.\\item mean: Mean performance elite configurations.\\item best: Best performance elite configurations.\\item worst: Worst performance elite configurations.} (Default: \"median\")} \\item{boundType}{Method calculate mean performance elite configurations.\\itemize{\\item candidate: Mean execution times across executed instances current one.\\item instance: Execution time current instance.} (Default: \"candidate\")} \\item{boundMax}{Maximum execution bound \\code{targetRunner}. must specified capping enabled. (Default: 0)} \\item{boundDigits}{Precision used calculating execution time. must specified capping enabled. (Default: 0)} \\item{boundPar}{Penalization constant timed executions (executions reach \\code{boundMax} execution time). (Default: 1)} \\item{boundAsTimeout}{Replace configuration cost bounded executions \\code{boundMax}. (Default: 1)} } \\item Recovery: \\describe{ \\item{recoveryFile}{Previously saved log file recover execution \\code{irace}, either absolute path relative current directory.  empty \\code{NULL}, recovery performed. (Default: \"\")} } \\item Testing: \\describe{ \\item{testInstancesDir}{Directory testing instances located, either absolute relative current directory. (Default: \"\")} \\item{testInstancesFile}{File containing list test instances optionally additional parameters . (Default: \"\")} \\item{testInstances}{Character vector instances used \\code{targetRunner} executing testing. (Default: \"\")} \\item{testNbElites}{Number elite configurations returned irace tested test instances provided. (Default: 1)} \\item{testIterationElites}{Enable/disable testing elite configurations found iteration. (Default: 0`)","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/defaultScenario.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Default scenario settings — defaultScenario","text":"Manuel López-Ibáñez Jérémie Dubois-Lacoste","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/getConfigurationById.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the configurations selected by ID. — getConfigurationById","title":"Returns the configurations selected by ID. — getConfigurationById","text":"Returns configurations selected ID.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/getConfigurationById.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the configurations selected by ID. — getConfigurationById","text":"","code":"getConfigurationById(iraceResults, ids, drop.metadata = FALSE)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/getConfigurationById.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the configurations selected by ID. — getConfigurationById","text":"iraceResults (list()|character(1)) iraceResults object created irace typically saved log file irace.Rdata. character string given, interpreted path log file iraceResults object loaded. ids id vector ids candidates configurations obtain. drop.metadata Remove metadata, configuration ID ID parent, returned configurations. See removeConfigurationsMetaData().","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/getConfigurationById.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the configurations selected by ID. — getConfigurationById","text":"data frame containing elite configurations required.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/getConfigurationById.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Returns the configurations selected by ID. — getConfigurationById","text":"Manuel López-Ibáñez Leslie Pérez Cáceres","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/getConfigurationByIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the configurations by the iteration in which they were executed. — getConfigurationByIteration","title":"Returns the configurations by the iteration in which they were executed. — getConfigurationByIteration","text":"Returns configurations iteration executed.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/getConfigurationByIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the configurations by the iteration in which they were executed. — getConfigurationByIteration","text":"","code":"getConfigurationByIteration(iraceResults, iterations, drop.metadata = FALSE)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/getConfigurationByIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the configurations by the iteration in which they were executed. — getConfigurationByIteration","text":"iraceResults (list()|character(1)) iraceResults object created irace typically saved log file irace.Rdata. character string given, interpreted path log file iraceResults object loaded. iterations iteration number vector iteration numbers configurations obtained. drop.metadata (FALSE) Remove metadata, configuration ID ID parent, returned configurations. See removeConfigurationsMetaData.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/getConfigurationByIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the configurations by the iteration in which they were executed. — getConfigurationByIteration","text":"data frame containing elite configurations required.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/getConfigurationByIteration.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Returns the configurations by the iteration in which they were executed. — getConfigurationByIteration","text":"Manuel López-Ibáñez Leslie Pérez Cáceres","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/getFinalElites.html","id":null,"dir":"Reference","previous_headings":"","what":"Return the elite configurations of the final iteration. — getFinalElites","title":"Return the elite configurations of the final iteration. — getFinalElites","text":"Return elite configurations final iteration.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/getFinalElites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return the elite configurations of the final iteration. — getFinalElites","text":"","code":"getFinalElites(iraceResults, n = 0L, drop.metadata = FALSE)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/getFinalElites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return the elite configurations of the final iteration. — getFinalElites","text":"iraceResults (list()|character(1)) iraceResults object created irace typically saved log file irace.Rdata. character string given, interpreted path log file iraceResults object loaded. n Number elite configurations return, n larger number configurations, existing ones returned. default (n=0) returns . drop.metadata Remove metadata, configuration ID ID parent, returned configurations. See removeConfigurationsMetaData.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/getFinalElites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return the elite configurations of the final iteration. — getFinalElites","text":"data frame containing elite configurations required.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/getFinalElites.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Return the elite configurations of the final iteration. — getFinalElites","text":"Manuel López-Ibáñez Leslie Pérez Cáceres","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/getFinalElites.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return the elite configurations of the final iteration. — getFinalElites","text":"","code":"log_file <- system.file(\"exdata/irace-acotsp.Rdata\", package=\"irace\", mustWork=TRUE) print(removeConfigurationsMetaData(getFinalElites(log_file, n=1))) #>     algorithm localsearch  alpha   beta   rho ants nnls     q0 dlb rasrank #> 153       acs           3 0.9864 5.9871 0.372   10   34 0.9358   1      NA #>     elitistants #> 153          NA"},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace-package.html","id":null,"dir":"Reference","previous_headings":"","what":"The irace package: Iterated Racing for Automatic Algorithm Configuration — irace-package","title":"The irace package: Iterated Racing for Automatic Algorithm Configuration — irace-package","text":"Iterated race extension Iterated F-race method              automatic configuration optimization algorithms, ,              (offline) tuning parameters finding appropriate              settings given set instances optimization problem.              M. López-Ibáñez, J. Dubois-Lacoste, L. Pérez Cáceres, T. Stützle,              M. Birattari (2016) <doi:10.1016/j.orp.2016.09.002>.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The irace package: Iterated Racing for Automatic Algorithm Configuration — irace-package","text":"License: GPL (>= 2)","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"The irace package: Iterated Racing for Automatic Algorithm Configuration — irace-package","text":"Manuel López-Ibáñez, Jérémie Dubois-Lacoste, Leslie Pérez Cáceres, Thomas Stützle, Mauro Birattari. irace package: Iterated Racing Automatic Algorithm Configuration. Operations Research Perspectives, 2016. doi:10.1016/j.orp.2016.09.002 Manuel López-Ibáñez, Jérémie Dubois-Lacoste, Thomas Stützle, Mauro Birattari. irace package, Iterated Race Automatic Algorithm Configuration. Technical Report TR/IRIDIA/2011-004, IRIDIA, Université Libre de Bruxelles, Belgium, 2011. Manuel López-Ibáñez Thomas Stützle. Automatic Design Multi-Objective Ant Colony Optimization Algorithms. IEEE Transactions Evolutionary Computation, 2012.","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"The irace package: Iterated Racing for Automatic Algorithm Configuration — irace-package","text":"Maintainers: Manuel López-Ibáñez Leslie Pérez Cáceres irace-package@googlegroups.com","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The irace package: Iterated Racing for Automatic Algorithm Configuration — irace-package","text":"","code":"#######################################################################  # This example illustrates how to tune the parameters of the simulated  # annealing algorithm (SANN) provided by the optim() function in the  # R base package.  The goal in this example is to optimize instances of  # the following family:  # f(x) = lambda * f_rastrigin(x) + (1 - lambda) * f_rosenbrock(x)  # where lambda follows a normal distribution whose mean is 0.9 and  # standard deviation is 0.02. f_rastrigin and f_rosenbrock are the  # well-known Rastrigin and Rosenbrock benchmark functions (taken from  # the cmaes package). In this scenario, different instances are given  # by different values of lambda.  #######################################################################  ## First we provide an implementation of the functions to be optimized:  f_rosenbrock <- function (x) {    d <- length(x)    z <- x + 1    hz <- z[1:(d - 1)]    tz <- z[2:d]    s <- sum(100 * (hz^2 - tz)^2 + (hz - 1)^2)    return(s)  }  f_rastrigin <- function (x) {    sum(x * x - 10 * cos(2 * pi * x) + 10)  }    ## We generate 20 instances (in this case, weights):  weights <- rnorm(20, mean = 0.9, sd = 0.02)    ## On this set of instances, we are interested in optimizing two  ## parameters of the SANN algorithm: tmax and temp. We setup the  ## parameter space as follows:  parameters_table <- '  tmax \"\" i,log (1, 5000)  temp \"\" r (0, 100)  '    ## We use the irace function readParameters to read this table:  parameters <- readParameters(text = parameters_table)    ## Next, we define the function that will evaluate each candidate  ## configuration on a single instance. For simplicity, we restrict to  ## three-dimensional functions and we set the maximum number of  ## iterations of SANN to 1000.  target_runner <- function(experiment, scenario)  {    instance <- experiment$instance    configuration <- experiment$configuration      D <- 3    par <- runif(D, min=-1, max=1)    fn <- function(x) {      weight <- instance      return(weight * f_rastrigin(x) + (1 - weight) * f_rosenbrock(x))    }    res <- stats::optim(par,fn, method=\"SANN\",                 control=list(maxit=1000                   , tmax = as.numeric(configuration[[\"tmax\"]])                   , temp = as.numeric(configuration[[\"temp\"]])                   ))    ## New output interface in irace 2.0. This list may also contain:    ## - 'time' if irace is called with 'maxTime'    ## - 'error' is a string used to report an error    ## - 'outputRaw' is a string used to report the raw output of calls to    ##   an external program or function.    ## - 'call' is a string used to report how target_runner called the    ##   external program or function.    return(list(cost = res$value))  }    ## We define a configuration scenario by setting targetRunner to the  ## function define above, instances to the first 10 random weights, and  ## a maximum budget of 'maxExperiments' calls to targetRunner.  scenario <- list(targetRunner = target_runner,                   instances = weights[1:10],                   maxExperiments = 500,                   # Do not create a logFile                   logFile = \"\")    ## We check that the scenario is valid. This will also try to execute  ## target_runner.  checkIraceScenario(scenario, parameters = parameters) #> # 2023-01-09 08:28:54 UTC: Checking scenario #> ## irace scenario: #> scenarioFile = \"./scenario.txt\" #> execDir = \"/tmp/RtmpI07iN4/file4f3d4379c62/reference\" #> parameterFile = \"/tmp/RtmpI07iN4/file4f3d4379c62/reference/parameters.txt\" #> forbiddenExps = NULL = expression() #> forbiddenFile = \"\" #> initConfigurations = NULL #> configurationsFile = \"\" #> logFile = \"\" #> recoveryFile = \"\" #> instances = c(0.907253854670274, 0.913437171977166, 0.939653472128969, 0.922398155993657, 0.900291142997494, 0.903555425001436, 0.890192560006654, 0.894135093381514, 0.882549801951329, 0.921596735264492) #> trainInstancesDir = \"./Instances\" #> trainInstancesFile = \"\" #> sampleInstances = TRUE #> testInstancesDir = \"\" #> testInstancesFile = \"\" #> testInstances = NULL #> testNbElites = 1L #> testIterationElites = FALSE #> testType = \"friedman\" #> firstTest = 5L #> blockSize = 1L #> eachTest = 1L #> targetRunner = function (experiment, scenario) {    instance <- experiment$instance    configuration <- experiment$configuration    D <- 3    par <- runif(D, min = -1, max = 1)    fn <- function(x) {        weight <- instance        return(weight * f_rastrigin(x) + (1 - weight) * f_rosenbrock(x))    }    res <- stats::optim(par, fn, method = \"SANN\", control = list(maxit = 1000,         tmax = as.numeric(configuration[[\"tmax\"]]), temp = as.numeric(configuration[[\"temp\"]])))    return(list(cost = res$value))} #> targetRunnerLauncher = \"\" #> targetCmdline = \"{configurationID} {instanceID} {seed} {instance} {bound} {targetRunnerArgs}\" #> targetRunnerRetries = 0L #> targetRunnerData = \"\" #> targetRunnerParallel = NULL #> targetEvaluator = NULL #> deterministic = FALSE #> maxExperiments = 500L #> maxTime = 0L #> budgetEstimation = 0.02 #> minMeasurableTime = 0.01 #> parallel = 0L #> loadBalancing = TRUE #> mpi = FALSE #> batchmode = \"0\" #> digits = 4L #> quiet = FALSE #> debugLevel = 2L #> seed = NA_character_ #> softRestart = TRUE #> softRestartThreshold = 1e-04 #> elitist = TRUE #> elitistNewInstances = 1L #> elitistLimit = 2L #> repairConfiguration = NULL #> capping = FALSE #> cappingType = \"median\" #> boundType = \"candidate\" #> boundMax = NULL #> boundDigits = 0L #> boundPar = 1L #> boundAsTimeout = TRUE #> postselection = 0 #> aclib = FALSE #> nbIterations = 0L #> nbExperimentsPerIteration = 0L #> minNbSurvival = 0L #> nbConfigurations = 0L #> mu = 5L #> confidence = 0.95 #> ## end of irace scenario #> # checkIraceScenario(): 'parameters' provided by user. Parameter file '/tmp/RtmpI07iN4/file4f3d4379c62/reference/parameters.txt' will be ignored #> # 2023-01-09 08:28:54 UTC: Checking target runner. #> # Executing targetRunner ( 2 times)... #> # targetRunner returned: #> [[1]] #> [[1]]$cost #> [1] 4.70686146971654 #>  #> [[1]]$time #> [1] NA #>  #>  #> [[2]] #> [[2]]$cost #> [1] 0.195205179200183 #>  #> [[2]]$time #> [1] NA #>  #>  #> # 2023-01-09 08:28:54 UTC: Check successful. #> [1] TRUE    # \\donttest{  ## We are now ready to launch irace. We do it by means of the irace  ## function. The function will print information about its  ## progress. This may require a few minutes, so it is not run by default.  tuned_confs <- irace(scenario = scenario, parameters = parameters) #> # 2023-01-09 08:28:54 UTC: Initialization #> # Elitist race #> # Elitist new instances: 1 #> # Elitist limit: 2 #> # nbIterations: 3 #> # minNbSurvival: 3 #> # nbParameters: 2 #> # seed: 239545961 #> # confidence level: 0.95 #> # budget: 500 #> # mu: 5 #> # deterministic: FALSE #>  #> # 2023-01-09 08:28:54 UTC: Iteration 1 of 3 #> # experimentsUsedSoFar: 0 #> # remainingBudget: 500 #> # currentBudget: 166 #> # nbConfigurations: 27 #> # Markers: #>      x No test is performed. #>      c Configurations are discarded only due to capping. #>      - The test is performed and some configurations are discarded. #>      = The test is performed but no configuration is discarded. #>      ! The test is performed and configurations could be discarded but elite configurations are preserved. #>      . All alive configurations are elite and nothing is discarded #>  #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> | |   Instance|      Alive|       Best|       Mean best| Exp so far|  W time|  rho|KenW|  Qvar| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> |x|          1|         27|         17|    0.1770350781|         27|00:00:00|   NA|  NA|    NA| #> |x|          2|         27|         22|     1.489045912|         54|00:00:00|+0.13|0.57|0.7705| #> |x|          3|         27|         17|     2.012354095|         81|00:00:00|+0.18|0.46|0.7896| #> |x|          4|         27|         22|     1.529098743|        108|00:00:00|+0.19|0.39|0.7774| #> |-|          5|         11|         22|     1.259842153|        135|00:00:00|+0.03|0.22|0.9976| #> |=|          6|         11|         22|     2.965466420|        146|00:00:00|-0.06|0.11|1.0118| #> |=|          7|         11|         22|     2.580341106|        157|00:00:00|-0.01|0.13|0.9527| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> Best-so-far configuration:          22    mean value:      2.580341106 #> Description of the best-so-far configuration: #>    .ID. tmax   temp .PARENT. #> 22   22  205 3.0789       NA #>  #> # 2023-01-09 08:28:56 UTC: Elite configurations (first number is the configuration ID; listed from best to worst according to the sum of ranks): #>    tmax    temp #> 22  205  3.0789 #> 27  151 89.6833 #> 9     4 38.8917 #> # 2023-01-09 08:28:56 UTC: Iteration 2 of 3 #> # experimentsUsedSoFar: 157 #> # remainingBudget: 343 #> # currentBudget: 171 #> # nbConfigurations: 24 #> # Markers: #>      x No test is performed. #>      c Configurations are discarded only due to capping. #>      - The test is performed and some configurations are discarded. #>      = The test is performed but no configuration is discarded. #>      ! The test is performed and configurations could be discarded but elite configurations are preserved. #>      . All alive configurations are elite and nothing is discarded #>  #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> | |   Instance|      Alive|       Best|       Mean best| Exp so far|  W time|  rho|KenW|  Qvar| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> |x|          8|         24|         31|   0.04087925754|         24|00:00:00|   NA|  NA|    NA| #> |x|          1|         24|         48|    0.7127618589|         45|00:00:00|-0.23|0.39|1.1577| #> |x|          6|         24|         48|    0.5886406753|         66|00:00:00|-0.02|0.32|0.9778| #> |x|          3|         24|         33|    0.9813176654|         87|00:00:00|+0.04|0.28|0.9229| #> |=|          5|         24|         33|    0.8783128963|        108|00:00:00|+0.05|0.24|0.9288| #> |=|          2|         24|         33|    0.7816412357|        129|00:00:00|+0.04|0.20|0.9354| #> |=|          4|         24|         33|    0.6799873325|        150|00:00:00|+0.05|0.19|0.9535| #> |-|          7|         10|         33|    0.6444249107|        171|00:00:00|-0.01|0.11|0.9500| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> Best-so-far configuration:          33    mean value:     0.6444249107 #> Description of the best-so-far configuration: #>    .ID. tmax    temp .PARENT. #> 33   33    3 21.5993        9 #>  #> # 2023-01-09 08:28:58 UTC: Elite configurations (first number is the configuration ID; listed from best to worst according to the sum of ranks): #>    tmax    temp #> 33    3 21.5993 #> 22  205  3.0789 #> 28    2 32.8007 #> # 2023-01-09 08:28:58 UTC: Iteration 3 of 3 #> # experimentsUsedSoFar: 328 #> # remainingBudget: 172 #> # currentBudget: 172 #> # nbConfigurations: 21 #> # Markers: #>      x No test is performed. #>      c Configurations are discarded only due to capping. #>      - The test is performed and some configurations are discarded. #>      = The test is performed but no configuration is discarded. #>      ! The test is performed and configurations could be discarded but elite configurations are preserved. #>      . All alive configurations are elite and nothing is discarded #>  #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> | |   Instance|      Alive|       Best|       Mean best| Exp so far|  W time|  rho|KenW|  Qvar| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> |x|          9|         21|         50|   0.04698197380|         21|00:00:00|   NA|  NA|    NA| #> |x|          5|         21|         62|    0.1147546502|         39|00:00:00|-0.23|0.38|1.0794| #> |x|          7|         21|         62|     1.149141790|         57|00:00:00|-0.13|0.25|0.9959| #> |x|          6|         21|         55|     2.176426156|         75|00:00:00|-0.08|0.19|0.9459| #> |=|          2|         21|         33|    0.4340252925|         93|00:00:00|+0.00|0.20|0.8960| #> |=|          3|         21|         33|    0.3822183870|        111|00:00:00|+0.01|0.17|0.9085| #> |=|          1|         21|         33|    0.3399896590|        129|00:00:00|-0.03|0.11|0.9695| #> |=|          8|         21|         33|    0.6583085834|        147|00:00:00|-0.02|0.10|0.9580| #> |=|          4|         21|         33|    0.5929480645|        165|00:00:00|-0.02|0.09|0.9493| #> +-+-----------+-----------+-----------+----------------+-----------+--------+-----+----+------+ #> Best-so-far configuration:          33    mean value:     0.5929480645 #> Description of the best-so-far configuration: #>    .ID. tmax    temp .PARENT. #> 33   33    3 21.5993        9 #>  #> # 2023-01-09 08:29:00 UTC: Elite configurations (first number is the configuration ID; listed from best to worst according to the sum of ranks): #>    tmax    temp #> 33    3 21.5993 #> 61    2 22.7625 #> 28    2 32.8007 #> # 2023-01-09 08:29:00 UTC: Stopped because there is not enough budget left to race more than the minimum (3) #> # You may either increase the budget or set 'minNbSurvival' to a lower value #> # Iteration: 4 #> # nbIterations: 4 #> # experimentsUsedSoFar: 493 #> # timeUsed: 0 #> # remainingBudget: 7 #> # currentBudget: 7 #> # number of elites: 3 #> # nbConfigurations: 3 #> # Total CPU user time: 5.948, CPU sys time: 0, Wall-clock time: 5.949    ## We can print the best configurations found by irace as follows:  configurations.print(tuned_confs) #>    tmax    temp #> 33    3 21.5993 #> 61    2 22.7625 #> 28    2 32.8007    ## We can evaluate the quality of the best configuration found by  ## irace versus the default configuration of the SANN algorithm on  ## the other 10 instances previously generated.  ## To do so, first we apply the default configuration of the SANN  ## algorithm to these instances:  test <- function(configuration)  {    res <- lapply(weights[11:20],                  function(x) target_runner(                                experiment = list(instance = x,                                                  configuration = configuration),                                scenario = scenario))    return (sapply(res, getElement, name = \"cost\"))  }  default <- test(data.frame(tmax=10, temp=10))  ## We extract and apply the winning configuration found by irace  ## to these instances:  tuned <- test(removeConfigurationsMetaData(tuned_confs[1,]))    ## Finally, we can compare using a boxplot the quality obtained with the  ## default parametrization of SANN and the quality obtained with the  ## best configuration found by irace.  boxplot(list(default = default, tuned = tuned))  # }"},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.cmdline.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch irace with command-line options. — irace.cmdline","title":"Launch irace with command-line options. — irace.cmdline","text":"Calls irace.main() using command-line options, maybe parsed command line used invoke R.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.cmdline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch irace with command-line options. — irace.cmdline","text":"","code":"irace.cmdline(argv = commandArgs(trailingOnly = TRUE))"},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.cmdline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch irace with command-line options. — irace.cmdline","text":"argv (character())  arguments provided R command line character vector, e.g., c(\"--scenario\", \"scenario.txt\", \"-p\", \"parameters.txt\"). Using  default value (providing parameter) easiest way call irace.cmdline.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.cmdline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch irace with command-line options. — irace.cmdline","text":"(invisible(data.frame)) data frame set best algorithm configurations found irace. data frame following columns: .ID. : Internal id candidate configuration. Parameter names : One column per parameter name parameters. .PARENT. : Internal id parent candidate configuration. Additionally, function saves R data file containing object called iraceResults. path file indicated scenario$logFile. iraceResults object list following structure: scenario scenario R object containing irace options used execution. See defaultScenario information. parameters parameters R object containing description target algorithm parameters. See readParameters. allConfigurations target algorithm configurations generated irace. object data frame, row candidate configuration, first column (.ID.) indicates internal identifier configuration, following columns correspond parameter values, column named parameter name specified parameter object. final column (.PARENT.)  identifier configuration model actual configuration sampled. allElites list contains one element per iteration, element contains internal identifier elite candidate configurations corresponding iteration (identifiers correspond allConfigurations$.ID.). iterationElites vector containing best candidate configuration internal identifier iteration. best configuration found corresponds last one vector. experiments matrix configurations columns instances rows. Column names correspond internal identifier configuration (allConfigurations$.ID.). experimentLog matrix columns iteration, instance, configuration, time.  matrix contains log experiments irace performs execution.  instance column refers index scenario$instancesList data frame. Time saved reported targetRunner. softRestart logical vector indicates soft restart performed iteration. FALSE, soft restart performed. state list contains state irace, recovery done using information contained object. testing list contains testing results. elements list : experiments matrix testing experiments selected configurations format explained seeds vector seeds used execute experiment.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.cmdline.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Launch irace with command-line options. — irace.cmdline","text":"function reads parameters given command line used invoke R, finds name scenario file, initializes scenario file (function readScenario) possibly parameters passed command line. finally starts irace calling irace.main. List command-line options:","code":"-h,--help                Show this help. -v,--version             Show irace package version. -c,--check               Check scenario. -i,--init                Initialize the working directory with template config                          files.    --only-test           Only test the configurations given in the file passed                          as argument. -s,--scenario            File that describes the configuration scenario setup                          and other irace settings. Default: ./scenario.txt.    --exec-dir            Directory where the programs will be run. Default: ./. -p,--parameter-file      File that contains the description of the parameters                          of the target algorithm. Default: ./parameters.txt.    --forbidden-file      File that contains a list of logical expressions that                          cannot be `TRUE` for any evaluated configuration. If                          empty or `NULL`, do not use forbidden expressions.    --configurations-file  File that contains a table of initial configurations.                          If empty or `NULL`, all initial configurations are                          randomly generated. -l,--log-file            File to save tuning results as an R dataset, either                          absolute path or relative to execDir. Default:                          ./irace.Rdata.    --recovery-file       Previously saved log file to recover the execution of                          `irace`, either absolute path or relative to the                          current directory.  If empty or `NULL`, recovery is                          not performed.    --train-instances-dir  Directory where training instances are located;                          either absolute path or relative to current directory.                          If no `trainInstancesFiles` is provided, all the files                          in `trainInstancesDir` will be listed as instances.                          Default: ./Instances.    --train-instances-file  File that contains a list of training instances and                          optionally additional parameters for them. If                          `trainInstancesDir` is provided, `irace` will search                          for the files in this folder.    --sample-instances    Randomly sample the training instances or use them in                          the order given. Default: 1.    --test-instances-dir  Directory where testing instances are located, either                          absolute or relative to current directory.    --test-instances-file  File containing a list of test instances and                          optionally additional parameters for them.    --test-num-elites     Number of elite configurations returned by irace that                          will be tested if test instances are provided.                          Default: 1.    --test-iteration-elites  Enable/disable testing the elite configurations                          found at each iteration. Default: 0.    --test-type           Statistical test used for elimination. The default                          value selects `t-test` if `capping` is enabled or                          `F-test`, otherwise. Valid values are: F-test                          (Friedman test), t-test (pairwise t-tests with no                          correction), t-test-bonferroni (t-test with                          Bonferroni's correction for multiple comparisons),                          t-test-holm (t-test with Holm's correction for                          multiple comparisons).    --first-test          Number of instances evaluated before the first                          elimination test. It must be a multiple of `eachTest`.                          Default: 5.    --block-size          Number of training instances, that make up a `block'                          in `trainInstancesFile`. Elimination of configurations                          will only be performed after evaluating a complete                          block and never in the middle of a block. Each block                          typically contains one instance from each instance                          class (type or family). Default: 1.    --each-test           Number of instances evaluated between elimination                          tests. Default: 1.    --target-runner       Executable called for each configuration that executes                          the target algorithm to be tuned. See the templates                          and examples provided. Default: ./target-runner.    --target-runner-launcher  Executable that will be used to launch the target                          runner, when `targetRunner` cannot be executed                          directly (e.g., a Python script in Windows).    --target-cmdline      Command-line arguments provided to `targetRunner` (or                          `targetRunnerLauncher` if defined). The substrings                          `\\{configurationID\\}`, `\\{instanceID\\}`, `\\{seed\\}`,                          `\\{instance\\}`, and `\\{bound\\}` will be replaced by                          their corresponding values. The substring                          `\\{targetRunnerArgs\\}` will be replaced by the                          concatenation of the switch and value of all active                          parameters of the particular configuration being                          evaluated.  The substring `\\{targetRunner\\}`, if                          present, will be replaced by the value of                          `targetRunner` (useful when using                          `targetRunnerLauncher`). Default: {configurationID}                          {instanceID} {seed} {instance} {bound}                          {targetRunnerArgs}.    --target-runner-retries  Number of times to retry a call to `targetRunner`                          if the call failed. Default: 0.    --target-evaluator    Optional script or R function that provides a numeric                          value for each configuration. See                          templates/target-evaluator.tmpl    --deterministic       If the target algorithm is deterministic,                          configurations will be evaluated only once per                          instance. Default: 0.    --max-experiments     Maximum number of runs (invocations of `targetRunner`)                          that will be performed. It determines the maximum                          budget of experiments for the tuning. Default: 0.    --max-time            Maximum total execution time in seconds for the                          executions of `targetRunner`. `targetRunner` must                          return two values: cost and time. Default: 0.    --budget-estimation   Fraction (smaller than 1) of the budget used to                          estimate the mean computation time of a configuration.                          Only used when `maxTime` > 0 Default: 0.02.    --min-measurable-time  Minimum time unit that is still (significantly)                          measureable. Default: 0.01.    --parallel            Number of calls to `targetRunner` to execute in                          parallel. Values `0` or `1` mean no parallelization.                          Default: 0.    --load-balancing      Enable/disable load-balancing when executing                          experiments in parallel. Load-balancing makes better                          use of computing resources, but increases                          communication overhead. If this overhead is large,                          disabling load-balancing may be faster. Default: 1.    --mpi                 Enable/disable MPI. Use `Rmpi` to execute                          `targetRunner` in parallel (parameter `parallel` is                          the number of slaves). Default: 0.    --batchmode           Specify how irace waits for jobs to finish when                          `targetRunner` submits jobs to a batch cluster: sge,                          pbs, torque, slurm or htcondor. `targetRunner` must                          submit jobs to the cluster using, for example, `qsub`.                          Default: 0.    --digits              Maximum number of decimal places that are significant                          for numerical (real) parameters. Default: 4. -q,--quiet               Reduce the output generated by irace to a minimum.                          Default: 0.    --debug-level         Debug level of the output of `irace`. Set this to 0 to                          silence all debug messages. Higher values provide more                          verbose debug messages. Default: 0.    --seed                Seed of the random number generator (by default,                          generate a random seed).    --soft-restart        Enable/disable the soft restart strategy that avoids                          premature convergence of the probabilistic model.                          Default: 1.    --soft-restart-threshold  Soft restart threshold value for numerical                          parameters. If `NA`, `NULL` or `\"\"`, it is computed as                          `10^-digits`. -e,--elitist             Enable/disable elitist irace. Default: 1.    --elitist-new-instances  Number of instances added to the execution list                          before previous instances in elitist irace. Default:                          1.    --elitist-limit       In elitist irace, maximum number per race of                          elimination tests that do not eliminate a                          configuration. Use 0 for no limit. Default: 2.    --capping             Enable the use of adaptive capping, a technique                          designed for minimizing the computation time of                          configurations. Capping is enabled by default if                          `elitist` is active, `maxTime > 0` and `boundMax > 0`.    --capping-type        Measure used to obtain the execution bound from the                          performance of the elite configurations: median, mean,                          worst, best. Default: median.    --bound-type          Method to calculate the mean performance of elite                          configurations: candidate or instance. Default:                          candidate.    --bound-max           Maximum execution bound for `targetRunner`. It must be                          specified when capping is enabled. Default: 0.    --bound-digits        Precision used for calculating the execution time. It                          must be specified when capping is enabled. Default: 0.    --bound-par           Penalization constant for timed out executions                          (executions that reach `boundMax` execution time).                          Default: 1.    --bound-as-timeout    Replace the configuration cost of bounded executions                          with `boundMax`. Default: 1.    --postselection       Percentage of the configuration budget used to perform                          a postselection race of the best configurations of                          each iteration after the execution of irace. Default:                          0.    --aclib               Enable/disable AClib mode. This option enables                          compatibility with GenericWrapper4AC as targetRunner                          script. Default: 0.    --iterations          Maximum number of iterations. Default: 0.    --experiments-per-iteration  Number of runs of the target algorithm per                          iteration. Default: 0.    --min-survival        Minimum number of configurations needed to continue                          the execution of each race (iteration). Default: 0.    --num-configurations  Number of configurations to be sampled and evaluated                          at each iteration. Default: 0.    --mu                  Parameter used to define the number of configurations                          sampled and evaluated at each iteration. Default: 5.    --confidence          Confidence level for the elimination test. Default:                          0.95."},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.cmdline.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Launch irace with command-line options. — irace.cmdline","text":"Manuel López-Ibáñez Jérémie Dubois-Lacoste","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.cmdline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch irace with command-line options. — irace.cmdline","text":"","code":"irace.cmdline(\"--version\") #> #------------------------------------------------------------------------------ #> # irace: An implementation in R of (Elitist) Iterated Racing #> # Version: 3.5.1.22532d5 #> # Copyright (C) 2010-2020 #> # Manuel Lopez-Ibanez     <manuel.lopez-ibanez@manchester.ac.uk> #> # Jeremie Dubois-Lacoste   #> # Leslie Perez Caceres    <leslie.perez.caceres@ulb.ac.be> #> # #> # This is free software, and you are welcome to redistribute it under certain #> # conditions.  See the GNU General Public License for details. There is NO #> # WARRANTY; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. #> # #> # irace builds upon previous code from the race package: #> #     race: Racing methods for the selection of the best #> #     Copyright (C) 2003 Mauro Birattari #> #------------------------------------------------------------------------------ #> # installed at: /home/runner/work/_temp/Library/irace #> # called with: --version #>  #> To cite package 'irace' in publications use: #>  #>   Manuel López-Ibáñez, Jérémie Dubois-Lacoste, Leslie Pérez Cáceres, #>   Thomas Stützle, and Mauro Birattari. The irace package: Iterated #>   Racing for Automatic Algorithm Configuration. Operations Research #>   Perspectives, 3:43-58, 2016. doi:10.1016/j.orp.2016.09.002 #>  #> A BibTeX entry for LaTeX users is #>  #>   @Article{, #>     title = {The irace package: Iterated Racing for Automatic Algorithm Configuration}, #>     author = {Manuel López-Ibáñez and Jérémie Dubois-Lacoste and Leslie {Pérez Cáceres} and Thomas Stützle and Mauro Birattari}, #>     year = {2016}, #>     journal = {Operations Research Perspectives}, #>     doi = {10.1016/j.orp.2016.09.002}, #>     volume = {3}, #>     pages = {43--58}, #>   } #>"},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.html","id":null,"dir":"Reference","previous_headings":"","what":"irace — irace","title":"irace — irace","text":"irace implements iterated Race. receives parameters tuned returns best configurations found, namely, elite configurations obtained last iterations (sorted rank).","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"irace — irace","text":"","code":"irace(scenario, parameters)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"irace — irace","text":"scenario (list())  Data structure containing irace settings. data structure one returned function defaultScenario() readScenario(). parameters (list())  Data structure containing parameter space definition. data structure similar one returned function readParameters.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"irace — irace","text":"(data.frame) data frame set best algorithm configurations found irace. data frame following columns: .ID. : Internal id candidate configuration. Parameter names : One column per parameter name parameters. .PARENT. : Internal id parent candidate configuration. Additionally, function saves R data file containing object called iraceResults. path file indicated scenario$logFile. iraceResults object list following structure: scenario scenario R object containing irace options used execution. See defaultScenario information. parameters parameters R object containing description target algorithm parameters. See readParameters. allConfigurations target algorithm configurations generated irace. object data frame, row candidate configuration, first column (.ID.) indicates internal identifier configuration, following columns correspond parameter values, column named parameter name specified parameter object. final column (.PARENT.)  identifier configuration model actual configuration sampled. allElites list contains one element per iteration, element contains internal identifier elite candidate configurations corresponding iteration (identifiers correspond allConfigurations$.ID.). iterationElites vector containing best candidate configuration internal identifier iteration. best configuration found corresponds last one vector. experiments matrix configurations columns instances rows. Column names correspond internal identifier configuration (allConfigurations$.ID.). experimentLog matrix columns iteration, instance, configuration, time.  matrix contains log experiments irace performs execution.  instance column refers index scenario$instancesList data frame. Time saved reported targetRunner. softRestart logical vector indicates soft restart performed iteration. FALSE, soft restart performed. state list contains state irace, recovery done using information contained object. testing list contains testing results. elements list : experiments matrix testing experiments selected configurations format explained seeds vector seeds used execute experiment.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"irace — irace","text":"function irace executes tuning procedure using information provided scenario parameters. Initially checks correctness scenario recovers previous execution scenario$recoveryFile set. R data file log execution created scenario$logFile.","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"irace — irace","text":"Manuel López-Ibáñez Jérémie Dubois-Lacoste","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"irace — irace","text":"","code":"if (FALSE) { parameters <- readParameters(\"parameters.txt\") scenario <- readScenario(filename = \"scenario.txt\") irace(scenario = scenario, parameters = parameters) }"},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.license.html","id":null,"dir":"Reference","previous_headings":"","what":"irace.license — irace.license","title":"irace.license — irace.license","text":"character string containing license information irace.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.license.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"irace.license — irace.license","text":"","code":"irace.license"},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.license.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"irace.license — irace.license","text":"object class character length 1.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.main.html","id":null,"dir":"Reference","previous_headings":"","what":"Higher-level interface to launch irace. — irace.main","title":"Higher-level interface to launch irace. — irace.main","text":"Higher-level interface launch irace.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.main.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Higher-level interface to launch irace. — irace.main","text":"","code":"irace.main(scenario, output.width = 9999L)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.main.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Higher-level interface to launch irace. — irace.main","text":"scenario (list())  Data structure containing irace settings. data structure one returned function defaultScenario() readScenario(). output.width (integer(1)) width used screen output.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.main.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Higher-level interface to launch irace. — irace.main","text":"(invisible(data.frame)) data frame set best algorithm configurations found irace. data frame following columns: .ID. : Internal id candidate configuration. Parameter names : One column per parameter name parameters. .PARENT. : Internal id parent candidate configuration. Additionally, function saves R data file containing object called iraceResults. path file indicated scenario$logFile. iraceResults object list following structure: scenario scenario R object containing irace options used execution. See defaultScenario information. parameters parameters R object containing description target algorithm parameters. See readParameters. allConfigurations target algorithm configurations generated irace. object data frame, row candidate configuration, first column (.ID.) indicates internal identifier configuration, following columns correspond parameter values, column named parameter name specified parameter object. final column (.PARENT.)  identifier configuration model actual configuration sampled. allElites list contains one element per iteration, element contains internal identifier elite candidate configurations corresponding iteration (identifiers correspond allConfigurations$.ID.). iterationElites vector containing best candidate configuration internal identifier iteration. best configuration found corresponds last one vector. experiments matrix configurations columns instances rows. Column names correspond internal identifier configuration (allConfigurations$.ID.). experimentLog matrix columns iteration, instance, configuration, time.  matrix contains log experiments irace performs execution.  instance column refers index scenario$instancesList data frame. Time saved reported targetRunner. softRestart logical vector indicates soft restart performed iteration. FALSE, soft restart performed. state list contains state irace, recovery done using information contained object. testing list contains testing results. elements list : experiments matrix testing experiments selected configurations format explained seeds vector seeds used execute experiment.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.main.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Higher-level interface to launch irace. — irace.main","text":"function checks correctness scenario, reads parameter space scenario$parameterFile, invokes irace(), prints results various formatted ways, (optionally) calls psRace() , finally, evaluates best configurations test instances (provided). want lower-level interface just runs irace, please see function irace().","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.main.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Higher-level interface to launch irace. — irace.main","text":"Manuel López-Ibáñez Jérémie Dubois-Lacoste","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.version.html","id":null,"dir":"Reference","previous_headings":"","what":"irace.version — irace.version","title":"irace.version — irace.version","text":"character string containing version irace.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"irace.version — irace.version","text":"","code":"irace.version"},{"path":"https://mlopez-ibanez.github.io/irace/reference/irace.version.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"irace.version — irace.version","text":"object class character length 1.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/path_rel2abs.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts a relative path to an absolute path. It tries really hard to create\ncanonical paths. — path_rel2abs","title":"Converts a relative path to an absolute path. It tries really hard to create\ncanonical paths. — path_rel2abs","text":"Converts relative path absolute path. tries really hard create canonical paths.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/path_rel2abs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts a relative path to an absolute path. It tries really hard to create\ncanonical paths. — path_rel2abs","text":"","code":"path_rel2abs(path, cwd = getwd())"},{"path":"https://mlopez-ibanez.github.io/irace/reference/path_rel2abs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts a relative path to an absolute path. It tries really hard to create\ncanonical paths. — path_rel2abs","text":"path (character(1)) Character string representing relative path. cwd (character(1)) Current working directory.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/path_rel2abs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts a relative path to an absolute path. It tries really hard to create\ncanonical paths. — path_rel2abs","text":"(character(1)) Character string representing absolute path","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/path_rel2abs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts a relative path to an absolute path. It tries really hard to create\ncanonical paths. — path_rel2abs","text":"","code":"path_rel2abs(\"..\") #> [1] \"/tmp/RtmpI07iN4/file4f3d4379c62\""},{"path":"https://mlopez-ibanez.github.io/irace/reference/plotAblation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create plot from an ablation log — plotAblation","title":"Create plot from an ablation log — plotAblation","text":"Create plot ablation log","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/plotAblation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create plot from an ablation log — plotAblation","text":"","code":"plotAblation(   ablog,   pdf.file = NULL,   pdf.width = 20,   type = c(\"mean\", \"boxplot\", \"rank\"),   n = 0L,   mar = par(\"mar\"),   ylab = \"Mean configuration cost\",   ylim = NULL,   ... )"},{"path":"https://mlopez-ibanez.github.io/irace/reference/plotAblation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create plot from an ablation log — plotAblation","text":"ablog (list()|character(1)) Ablation log object returned ablation(). Alternatively, path .Rdata file, e.g., \"log-ablation.Rdata\", object loaded. pdf.file Output filename. pdf.width Width provided create pdf file. type Type plot. Supported values \"mean\" \"boxplot\". Adding \"rank\" plot rank per instance instead raw cost value. n (integer(1)) Number parameters included plot. default parameters included. mar Vector margins ablation plot. ylab Label y-axis. ylim Numeric vector length 2 giving y-axis range. ... graphical parameters may also supplied arguments. See graphics::plot.default().","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/plotAblation.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create plot from an ablation log — plotAblation","text":"Leslie Pérez Cáceres Manuel López-Ibáñez","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/plotAblation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create plot from an ablation log — plotAblation","text":"","code":"logfile <- file.path(system.file(package=\"irace\"), \"exdata\", \"log-ablation.Rdata\") plotAblation(ablog = logfile)  plotAblation(ablog = logfile, type = \"boxplot\")  plotAblation(ablog = logfile, type = c(\"rank\",\"boxplot\"))"},{"path":"https://mlopez-ibanez.github.io/irace/reference/printParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Print parameter space in the textual format accepted by irace. — printParameters","title":"Print parameter space in the textual format accepted by irace. — printParameters","text":"FIXME: Dependent parameter bounds supported yet.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/printParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print parameter space in the textual format accepted by irace. — printParameters","text":"","code":"printParameters(params, digits = 15L)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/printParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print parameter space in the textual format accepted by irace. — printParameters","text":"params (list()) Parameter object stored irace.Rdata read irace::readParameters(). digits (integer()) desired number digits decimal point real-valued parameters. Default 15, value scenario$digits.","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/printParameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print parameter space in the textual format accepted by irace. — printParameters","text":"","code":"parameters.table <- '  # name       switch           type  values               [conditions (using R syntax)]  algorithm    \"--\"             c     (as,mmas,eas,ras,acs)  localsearch  \"--localsearch \" c     (0, 1, 2, 3)  ants         \"--ants \"        i,log (5, 100)  q0           \"--q0 \"          r     (0.0, 1.0)           | algorithm == \"acs\"  nnls         \"--nnls \"        i     (5, 50)              | localsearch %in% c(1,2,3)  ' parameters <- readParameters(text=parameters.table) printParameters(parameters) #> algorithm   \"--\"             c (as,mmas,eas,ras,acs) #> localsearch \"--localsearch \" c (0,1,2,3)       #> ants        \"--ants \"        i,log (5,100)         #> q0          \"--q0 \"          r (0,1)           | algorithm == \"acs\" #> nnls        \"--nnls \"        i (5,50)          | localsearch %in% c(1, 2, 3)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/printScenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Prints the given scenario — printScenario","title":"Prints the given scenario — printScenario","text":"Prints given scenario","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/printScenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prints the given scenario — printScenario","text":"","code":"printScenario(scenario)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/printScenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prints the given scenario — printScenario","text":"scenario (list())  Data structure containing irace settings. data structure one returned function defaultScenario() readScenario().","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/printScenario.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Prints the given scenario — printScenario","text":"Manuel López-Ibáñez Jérémie Dubois-Lacoste","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/psRace.html","id":null,"dir":"Reference","previous_headings":"","what":"psRace — psRace","title":"psRace — psRace","text":"psRace performs postselection race set configurations.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/psRace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"psRace — psRace","text":"","code":"psRace(   iraceLogFile = NULL,   iraceResults = NULL,   conf.ids = NULL,   postselection = NULL,   max.experiments = NULL,   elites = FALSE,   seed = 1234567 )"},{"path":"https://mlopez-ibanez.github.io/irace/reference/psRace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"psRace — psRace","text":"iraceLogFile NULL Log file created irace, file must contain iraceResults object. iraceResults NULL Object created irace saved scenario$logFile. conf.ids NULL IDs configurations iraceResults$allConfigurations used ablation. NULL, elites argument used. postselection NULL Percentage maxExperiments provided scenario used race. max.experiments NULL Number experiments available race. NULL budget race set parameter scenario$postselection, defines percentage total budget irace (iraceResults$scenario$maxExperiments iraceResults$scenario$maxTime/iraceResults$state$timeEstimate) use postselection. elites FALSE Flag selecting configurations. FALSE, best configurations iteration used race. TRUE, elite configurtions iteration used race. seed 1234567 Numerical value use seed random number generation.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/psRace.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"psRace — psRace","text":"iraceLogFile NULL, returns list following elements: configurations Configurations used race. instances matrix instances used experiments. First column instances ids iraceResults$scenario$instances, second column seed assigned instance. maxExperiments Maximum number experiments set race. experiments matrix results experiments (columns configurations, rows instances). elites Best configurations found experiments. iraceLogFile provided list object saved iraceResults$psrace.log.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/psRace.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"psRace — psRace","text":"Leslie Pérez Cáceres","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/psRace.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"psRace — psRace","text":"","code":"if (FALSE) {   # Execute the postselection automatically after irace   scenario <- readScenario(filename=\"scenario.txt\")   parameters <- readParameters(\"parameters.txt\")   # Use 10% of the total budget   scenario$postselection <- 0.1   irace(scenario=scenario, parameters=parameters)   # Execute the postselection after the execution of \\pkg{irace}.   psRace(iraceLogFile=\"irace.Rdata\", max.experiments=120) }"},{"path":"https://mlopez-ibanez.github.io/irace/reference/readConfigurationsFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read parameter configurations from a file — readConfigurationsFile","title":"Read parameter configurations from a file — readConfigurationsFile","text":"Reads set target-algorithm configurations file puts irace format. configurations checked match parameters description provided.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/readConfigurationsFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read parameter configurations from a file — readConfigurationsFile","text":"","code":"readConfigurationsFile(filename, parameters, debugLevel = 0, text)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/readConfigurationsFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read parameter configurations from a file — readConfigurationsFile","text":"filename (character(1))  Filename configurations read. contents readable read.table( , header=TRUE). parameters (list())  Data structure containing parameter space definition. data structure similar one returned function readParameters. debugLevel (integer(1))  Larger values produce verbose output. text (character(1))  file supplied , parameters read value text via text connection.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/readConfigurationsFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read parameter configurations from a file — readConfigurationsFile","text":"data frame containing obtained configurations. row data frame candidate configuration, columns correspond parameter names parameters.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/readConfigurationsFile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read parameter configurations from a file — readConfigurationsFile","text":"Example input file:   order columns necessarily file containing definition parameters.","code":"# This is a comment line <param_name_1>  <param_name_2> ...        0.5           \"value_1\"    ...       1.0           \"value_2\"    ...       1.2           \"value_3\"    ...       ...           ..."},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/readConfigurationsFile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read parameter configurations from a file — readConfigurationsFile","text":"Manuel López-Ibáñez Jérémie Dubois-Lacoste","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/readParameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads the parameters to be tuned by irace from a file or from a\ncharacter string. — readParameters","title":"Reads the parameters to be tuned by irace from a file or from a\ncharacter string. — readParameters","text":"Reads parameters tuned irace file character string.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/readParameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads the parameters to be tuned by irace from a file or from a\ncharacter string. — readParameters","text":"","code":"readParameters(file, digits = 4, debugLevel = 0, text)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/readParameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads the parameters to be tuned by irace from a file or from a\ncharacter string. — readParameters","text":"file (character(1))  Filename containing definitions parameters tuned. digits number decimal places considered real parameters. debugLevel (integer(1))  Larger values produce verbose output. text (character(1))  file supplied , parameters read value text via text connection.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/readParameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads the parameters to be tuned by irace from a file or from a\ncharacter string. — readParameters","text":"list containing definitions parameters read. list structured follows: names Vector contains names parameters. types Vector contains type parameter '', 'c', 'r', 'o'. Numerical parameters can sampled log-scale ',log' 'r,log' (spaces). switches Vector contains switches used parameters command line. domain List vectors, vector may contain two values (minimum, maximum) real integer parameters, possibly categorical parameters. conditions List R logical expressions, variables corresponding parameter names. isFixed Logical vector specifies parameter fixed , thus, need tuned. nbParameters integer, total number parameters. nbFixed integer, number parameters fixed value. nbVariable Number variable (tuned) parameters. depends List character vectors, vector specifies parameters depend one. isDependent Logical vector specifies parameter dependent domain.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/readParameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reads the parameters to be tuned by irace from a file or from a\ncharacter string. — readParameters","text":"Either file text must given. file given, parameters read file file. text given instead, parameters read directly text character string. cases, parameters must given (text file whose name file) expected form.  See documentation details.  none parameters given, irace stop error. fixed parameter parameter sampled instead always set value domain.  function set isFixed TRUE parameter categorical one possible value.  integer minimum maximum equal, real minimum maximum values satisfy round(minimum, digits) == round(maximum, digits), parameter description rejected invalid identify potential user errors.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/readParameters.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reads the parameters to be tuned by irace from a file or from a\ncharacter string. — readParameters","text":"Manuel López-Ibáñez Jérémie Dubois-Lacoste","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/readParameters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads the parameters to be tuned by irace from a file or from a\ncharacter string. — readParameters","text":"","code":"## Read the parameters directly from text  parameters.table <- '  # name       switch           type  values               [conditions (using R syntax)]  algorithm    \"--\"             c     (as,mmas,eas,ras,acs)  localsearch  \"--localsearch \" c     (0, 1, 2, 3)  alpha        \"--alpha \"       r     (0.00, 5.00)  beta         \"--beta \"        r     (0.00, 10.00)  rho          \"--rho  \"        r     (0.01, 1.00)  ants         \"--ants \"        i,log (5, 100)  q0           \"--q0 \"          r     (0.0, 1.0)           | algorithm == \"acs\"  rasrank      \"--rasranks \"    i     (1, \"min(ants, 10)\") | algorithm == \"ras\"  elitistants  \"--elitistants \" i     (1, ants)            | algorithm == \"eas\"  nnls         \"--nnls \"        i     (5, 50)              | localsearch %in% c(1,2,3)  dlb          \"--dlb \"         c     (0, 1)               | localsearch %in% c(1,2,3)  '  parameters <- readParameters(text=parameters.table)  str(parameters) #> List of 13 #>  $ names       : chr [1:11] \"algorithm\" \"localsearch\" \"alpha\" \"beta\" ... #>  $ types       : Named chr [1:11] \"c\" \"c\" \"r\" \"r\" ... #>   ..- attr(*, \"names\")= chr [1:11] \"algorithm\" \"localsearch\" \"alpha\" \"beta\" ... #>  $ switches    : Named chr [1:11] \"--\" \"--localsearch \" \"--alpha \" \"--beta \" ... #>   ..- attr(*, \"names\")= chr [1:11] \"algorithm\" \"localsearch\" \"alpha\" \"beta\" ... #>  $ domain      :List of 11 #>   ..$ algorithm  : chr [1:5] \"as\" \"mmas\" \"eas\" \"ras\" ... #>   ..$ localsearch: chr [1:4] \"0\" \"1\" \"2\" \"3\" #>   ..$ alpha      : num [1:2] 0 5 #>   ..$ beta       : num [1:2] 0 10 #>   ..$ rho        : num [1:2] 0.01 1 #>   ..$ ants       : num [1:2] 5 100 #>   ..$ q0         : num [1:2] 0 1 #>   ..$ rasrank    :  expression(1, min(ants, 10)) #>   ..$ elitistants:  expression(1, ants) #>   ..$ nnls       : num [1:2] 5 50 #>   ..$ dlb        : chr [1:2] \"0\" \"1\" #>  $ conditions  :List of 11 #>   ..$ algorithm  : logi TRUE #>   ..$ localsearch: logi TRUE #>   ..$ alpha      : logi TRUE #>   ..$ beta       : logi TRUE #>   ..$ rho        : logi TRUE #>   ..$ ants       : logi TRUE #>   ..$ q0         :  expression(algorithm == \"acs\") #>   ..$ rasrank    :  expression(algorithm == \"ras\") #>   ..$ elitistants:  expression(algorithm == \"eas\") #>   ..$ nnls       :  expression(localsearch %in% c(1, 2, 3)) #>   ..$ dlb        :  expression(localsearch %in% c(1, 2, 3)) #>  $ isFixed     : Named logi [1:11] FALSE FALSE FALSE FALSE FALSE FALSE ... #>   ..- attr(*, \"names\")= chr [1:11] \"algorithm\" \"localsearch\" \"alpha\" \"beta\" ... #>  $ transform   :List of 11 #>   ..$ algorithm  : chr \"\" #>   ..$ localsearch: chr \"\" #>   ..$ alpha      : chr \"\" #>   ..$ beta       : chr \"\" #>   ..$ rho        : chr \"\" #>   ..$ ants       : chr \"log\" #>   .. ..- attr(*, \"lower\")= num 1.61 #>   .. ..- attr(*, \"upper\")= num 4.62 #>   ..$ q0         : chr \"\" #>   ..$ rasrank    : chr \"\" #>   ..$ elitistants: chr \"\" #>   ..$ nnls       : chr \"\" #>   ..$ dlb        : chr \"\" #>  $ isDependent : Named logi [1:11] FALSE FALSE FALSE FALSE FALSE FALSE ... #>   ..- attr(*, \"names\")= chr [1:11] \"algorithm\" \"localsearch\" \"alpha\" \"beta\" ... #>  $ depends     :List of 11 #>   ..$ algorithm  : chr(0)  #>   ..$ localsearch: chr(0)  #>   ..$ alpha      : chr(0)  #>   ..$ beta       : chr(0)  #>   ..$ rho        : chr(0)  #>   ..$ ants       : chr(0)  #>   ..$ q0         : chr \"algorithm\" #>   ..$ rasrank    : chr [1:2] \"ants\" \"algorithm\" #>   ..$ elitistants: chr [1:2] \"ants\" \"algorithm\" #>   ..$ nnls       : chr \"localsearch\" #>   ..$ dlb        : chr \"localsearch\" #>  $ hierarchy   : Named num [1:11] 1 1 1 1 1 1 2 2 2 2 ... #>   ..- attr(*, \"names\")= chr [1:11] \"algorithm\" \"localsearch\" \"alpha\" \"beta\" ... #>  $ nbParameters: int 11 #>  $ nbFixed     : int 0 #>  $ nbVariable  : int 11"},{"path":"https://mlopez-ibanez.github.io/irace/reference/readParametersData.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads the parameters to be tuned by irace from a r data structure. This function is no user friendly\nbecause constructing the input data is error-prone and the function does not contain any input validation.\nDesigned as a low lever interface for wrapper functions in other libraries. We recommend you use the much\nnicer readParameter function or whatever user friendly interface in other languages such as iracepy. — readParametersData","title":"Reads the parameters to be tuned by irace from a r data structure. This function is no user friendly\nbecause constructing the input data is error-prone and the function does not contain any input validation.\nDesigned as a low lever interface for wrapper functions in other libraries. We recommend you use the much\nnicer readParameter function or whatever user friendly interface in other languages such as iracepy. — readParametersData","text":"Reads parameters tuned irace r data structure. function user friendly constructing input data error-prone function contain input validation. Designed low lever interface wrapper functions libraries. recommend use much nicer readParameter function whatever user friendly interface languages iracepy.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/readParametersData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads the parameters to be tuned by irace from a r data structure. This function is no user friendly\nbecause constructing the input data is error-prone and the function does not contain any input validation.\nDesigned as a low lever interface for wrapper functions in other libraries. We recommend you use the much\nnicer readParameter function or whatever user friendly interface in other languages such as iracepy. — readParametersData","text":"","code":"readParametersData(names, types, switches, domain, conditions)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/readParametersData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads the parameters to be tuned by irace from a r data structure. This function is no user friendly\nbecause constructing the input data is error-prone and the function does not contain any input validation.\nDesigned as a low lever interface for wrapper functions in other libraries. We recommend you use the much\nnicer readParameter function or whatever user friendly interface in other languages such as iracepy. — readParametersData","text":"names Vector contains names parameters. types Vector contains type parameter '', 'c', 'r', 'o'. Numerical parameters can sampled log-scale ',log' 'r,log' (spaces). switches contains switches used parameters command line. domain List vectors, vector may contain two values (minimum, maximum) real integer parameters, possibly categorical parameters conditions List R logical expressions, variables corresponding parameter names.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/readParametersData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads the parameters to be tuned by irace from a r data structure. This function is no user friendly\nbecause constructing the input data is error-prone and the function does not contain any input validation.\nDesigned as a low lever interface for wrapper functions in other libraries. We recommend you use the much\nnicer readParameter function or whatever user friendly interface in other languages such as iracepy. — readParametersData","text":"list containing definitions parameters read. list structured follows: names Vector contains names parameters. types Vector contains type parameter '', 'c', 'r', 'o'. Numerical parameters can sampled log-scale ',log' 'r,log' (spaces). switches Vector contains switches used parameters command line. domain List vectors, vector may contain two values (minimum, maximum) real integer parameters, possibly categorical parameters. conditions List R logical expressions, variables corresponding parameter names. isFixed Logical vector specifies parameter fixed , thus, need tuned. nbParameters integer, total number parameters. nbFixed integer, number parameters fixed value. nbVariable Number variable (tuned) parameters. depends List character vectors, vector specifies parameters depend one. isDependent Logical vector specifies parameter dependent domain.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/readParametersData.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reads the parameters to be tuned by irace from a r data structure. This function is no user friendly\nbecause constructing the input data is error-prone and the function does not contain any input validation.\nDesigned as a low lever interface for wrapper functions in other libraries. We recommend you use the much\nnicer readParameter function or whatever user friendly interface in other languages such as iracepy. — readParametersData","text":"function designed used API binding languages python iracepy. , input validation (validations packages using , iracepy). Invalid input different lengths vectors list result undefined behavior. fixed parameter parameter sampled instead always set value domain.  function set isFixed TRUE parameter categorical one possible value.  integer minimum maximum equal, real minimum maximum values satisfy round(minimum, digits) == round(maximum, digits), parameter description rejected invalid identify potential user errors.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/readParametersData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reads the parameters to be tuned by irace from a r data structure. This function is no user friendly\nbecause constructing the input data is error-prone and the function does not contain any input validation.\nDesigned as a low lever interface for wrapper functions in other libraries. We recommend you use the much\nnicer readParameter function or whatever user friendly interface in other languages such as iracepy. — readParametersData","text":"Deyao Chen","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/readParametersData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reads the parameters to be tuned by irace from a r data structure. This function is no user friendly\nbecause constructing the input data is error-prone and the function does not contain any input validation.\nDesigned as a low lever interface for wrapper functions in other libraries. We recommend you use the much\nnicer readParameter function or whatever user friendly interface in other languages such as iracepy. — readParametersData","text":"","code":"parameters.table <- ' # name       switch           type  values               [conditions (using R syntax)] algorithm    \"--\"             c     (as,mmas,eas,ras,acs) localsearch  \"--localsearch \" c     (0, 1, 2, 3) alpha        \"--alpha \"       r     (0.00, 5.00) beta         \"--beta \"        r     (0.00, 10.00) rho          \"--rho  \"        r     (0.01, 1.00) ants         \"--ants \"        i,log (5, 100) q0           \"--q0 \"          r     (0.0, 1.0)           | algorithm == \"acs\" rasrank      \"--rasranks \"    i     (1, \"min(ants, 10)\") | algorithm == \"ras\" elitistants  \"--elitistants \" i     (1, ants)            | algorithm == \"eas\" nnls         \"--nnls \"        i     (5, 50)              | localsearch %in% c(1,2,3) dlb          \"--dlb \"         c     (0, 1)               | localsearch %in% c(1,2,3) '  d = list() names <- c(     'algorithm',     'localsearch',     'alpha',     'beta',     'rho',     'ants',     'q0',     'rasrank',     'elitistants',     'nnls',     'dlb' )  switches <- c(     '--',     '--localsearch ',     '--alpha ',     '--beta ',     '--rho  ',     '--ants ',     '--q0 ',     '--rasranks ',     '--elitistants ',     '--nnls ',     '--dlb ' )  types <- c(     'c',     'c',     'r',     'r',     'r',     'i,log',     'r',     'i',     'i',     'i',     'c' )  domain <- list(     c('as', 'mmas', 'eas', 'ras', 'acs'),     c('0', '1', '2', '3'),     c(0.0, 5.0),     c(0.0, 10.0),     c(0.01, 1.0),     c(5, 100),     c(0.0, 1.0),     expression(1, min(ants, 10)),     expression(1, ants),     c(5, 50),     c('0', '1') )   conditions <- list(     TRUE,     TRUE,     TRUE,     TRUE,     TRUE,     TRUE,     expression(algorithm == 'acs'),     expression(algorithm == 'ras'),     expression(algorithm == 'eas'),     expression(localsearch %in% c(1, 2, 3)),     expression(localsearch %in% c(1, 2, 3)) )   t <- readParameters(text = parameters.table, digits = 5)  u <- readParametersData(names = names, switches = switches, types = types, domain = domain, conditions = conditions)  identical(t, u) #> [1] TRUE # The two methods of reading parameters give identical results"},{"path":"https://mlopez-ibanez.github.io/irace/reference/readScenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Reads from a file the scenario settings to be used by irace. — readScenario","title":"Reads from a file the scenario settings to be used by irace. — readScenario","text":"Reads file scenario settings used irace.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/readScenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reads from a file the scenario settings to be used by irace. — readScenario","text":"","code":"readScenario(filename = \"\", scenario = list(), params_def = .irace.params.def)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/readScenario.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reads from a file the scenario settings to be used by irace. — readScenario","text":"filename (character(1))  Filename scenario read. empty, default scenarioFile used.  example scenario file provided system.file(``package=\"irace\", \"templates/scenario.txt.tmpl\"). scenario (list())  Data structure containing irace settings. data structure one returned function defaultScenario() readScenario(). initial scenario overwritten params_def (data.frame())  Definition options accepted scenario. modified packages wish extend irace.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/readScenario.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reads from a file the scenario settings to be used by irace. — readScenario","text":"scenario list read file. scenario settings present file present list, .e., NULL.","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/readScenario.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reads from a file the scenario settings to be used by irace. — readScenario","text":"Manuel López-Ibáñez Jérémie Dubois-Lacoste","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/read_ablogfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the log file (log-ablation.Rdata) produced by ablation(). — read_ablogfile","title":"Read the log file (log-ablation.Rdata) produced by ablation(). — read_ablogfile","text":"Read log file (log-ablation.Rdata) produced ablation().","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/read_ablogfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the log file (log-ablation.Rdata) produced by ablation(). — read_ablogfile","text":"","code":"read_ablogfile(filename)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/read_ablogfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the log file (log-ablation.Rdata) produced by ablation(). — read_ablogfile","text":"filename Filename contains log file saved ablation(). Example: log-ablation.Rdata.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/read_ablogfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the log file (log-ablation.Rdata) produced by ablation(). — read_ablogfile","text":"(list())","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/read_logfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the log file produced by irace (irace.Rdata). — read_logfile","title":"Read the log file produced by irace (irace.Rdata). — read_logfile","text":"Read log file produced irace (irace.Rdata).","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/read_logfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the log file produced by irace (irace.Rdata). — read_logfile","text":"","code":"read_logfile(filename, name = \"iraceResults\")"},{"path":"https://mlopez-ibanez.github.io/irace/reference/read_logfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the log file produced by irace (irace.Rdata). — read_logfile","text":"filename Filename contains log file saved irace. Example: irace.Rdata. name Optional argument allows overriding default name object file.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/read_logfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the log file produced by irace (irace.Rdata). — read_logfile","text":"(list())","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/read_pcs_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read parameters in PCS (AClib) format and write them in irace format. — read_pcs_file","title":"Read parameters in PCS (AClib) format and write them in irace format. — read_pcs_file","text":"Read parameters PCS (AClib) format write irace format.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/read_pcs_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read parameters in PCS (AClib) format and write them in irace format. — read_pcs_file","text":"","code":"read_pcs_file(file, digits = 4, debugLevel = 0, text)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/read_pcs_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read parameters in PCS (AClib) format and write them in irace format. — read_pcs_file","text":"file (character(1))  Filename containing definitions parameters tuned. digits number decimal places considered real parameters. debugLevel (integer(1))  Larger values produce verbose output. text (character(1))  file supplied , parameters read value text via text connection.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/read_pcs_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read parameters in PCS (AClib) format and write them in irace format. — read_pcs_file","text":"string representing parameters irace format.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/read_pcs_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read parameters in PCS (AClib) format and write them in irace format. — read_pcs_file","text":"Either file text must given. file given, parameters read file file. text given instead, parameters read directly text character string. cases, parameters must given (text file whose name file) expected form.  See documentation details.  none parameters given, irace stop error. FIXME: Forbidden configurations default configuration currently ignored. See https://github.com/MLopez-Ibanez/irace/issues/31","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/read_pcs_file.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Read parameters in PCS (AClib) format and write them in irace format. — read_pcs_file","text":"Frank Hutter, Manuel López-Ibáñez, Chris Fawcett, Marius Thomas Lindauer, Holger H. Hoos, Kevin Leyton-Brown, Thomas Stützle. AClib: Benchmark Library Algorithm Configuration. P. M. Pardalos, M. G. C. Resende, C. Vogiatzis, J. L. Walteros, editors, Learning Intelligent Optimization, 8th International Conference, LION 8, volume 8426 Lecture Notes Computer Science, pages 36–40. Springer, Heidelberg, 2014.","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/read_pcs_file.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Read parameters in PCS (AClib) format and write them in irace format. — read_pcs_file","text":"Manuel López-Ibáñez","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/read_pcs_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read parameters in PCS (AClib) format and write them in irace format. — read_pcs_file","text":"","code":"## Read the parameters directly from text  pcs_table <- '  # name       domain  algorithm    {as,mmas,eas,ras,acs}[as]  localsearch  {0, 1, 2, 3}[0]  alpha        [0.00, 5.00][1]  beta         [0.00, 10.00][1]  rho          [0.01, 1.00][0.95]  ants         [1, 100][10]il  q0           [0.0, 1.0][0]  rasrank      [1, 100][1]i  elitistants  [1, 750][1]i  nnls         [5, 50][5]i  dlb          {0, 1}[1]   Conditionals:  q0 | algorithm in {acs}  rasrank | algorithm in {ras}  elitistants | algorithm in {eas}  nnls | localsearch in {1,2,3}  dlb | localsearch in {1,2,3}  '  parameters_table <- read_pcs_file(text=pcs_table)  cat(parameters_table) #>  #>  # name       domain #> algorithm \"algorithm\" c (as,mmas,eas,ras,acs) #> localsearch \"localsearch\" c (0, 1, 2, 3) #> alpha \"alpha\" r (0.00, 5.00) #> beta \"beta\" r (0.00, 10.00) #> rho \"rho\" r (0.01, 1.00) #> ants \"ants\" i,log (1, 100) #> q0 \"q0\" r (0.0, 1.0) | algorithm %in% c(\"acs\") #> rasrank \"rasrank\" i (1, 100) | algorithm %in% c(\"ras\") #> elitistants \"elitistants\" i (1, 750) | algorithm %in% c(\"eas\") #> nnls \"nnls\" i (5, 50) | localsearch %in% c(\"1\",\"2\",\"3\") #> dlb \"dlb\" c (0, 1) | localsearch %in% c(\"1\",\"2\",\"3\")  #>    parameters <- readParameters(text=parameters_table)  str(parameters) #> List of 13 #>  $ names       : chr [1:11] \"algorithm\" \"localsearch\" \"alpha\" \"beta\" ... #>  $ types       : Named chr [1:11] \"c\" \"c\" \"r\" \"r\" ... #>   ..- attr(*, \"names\")= chr [1:11] \"algorithm\" \"localsearch\" \"alpha\" \"beta\" ... #>  $ switches    : Named chr [1:11] \"algorithm\" \"localsearch\" \"alpha\" \"beta\" ... #>   ..- attr(*, \"names\")= chr [1:11] \"algorithm\" \"localsearch\" \"alpha\" \"beta\" ... #>  $ domain      :List of 11 #>   ..$ algorithm  : chr [1:5] \"as\" \"mmas\" \"eas\" \"ras\" ... #>   ..$ localsearch: chr [1:4] \"0\" \"1\" \"2\" \"3\" #>   ..$ alpha      : num [1:2] 0 5 #>   ..$ beta       : num [1:2] 0 10 #>   ..$ rho        : num [1:2] 0.01 1 #>   ..$ ants       : num [1:2] 1 100 #>   ..$ q0         : num [1:2] 0 1 #>   ..$ rasrank    : num [1:2] 1 100 #>   ..$ elitistants: num [1:2] 1 750 #>   ..$ nnls       : num [1:2] 5 50 #>   ..$ dlb        : chr [1:2] \"0\" \"1\" #>  $ conditions  :List of 11 #>   ..$ algorithm  : logi TRUE #>   ..$ localsearch: logi TRUE #>   ..$ alpha      : logi TRUE #>   ..$ beta       : logi TRUE #>   ..$ rho        : logi TRUE #>   ..$ ants       : logi TRUE #>   ..$ q0         :  expression(algorithm %in% c(\"acs\")) #>   ..$ rasrank    :  expression(algorithm %in% c(\"ras\")) #>   ..$ elitistants:  expression(algorithm %in% c(\"eas\")) #>   ..$ nnls       :  expression(localsearch %in% c(\"1\", \"2\", \"3\")) #>   ..$ dlb        :  expression(localsearch %in% c(\"1\", \"2\", \"3\")) #>  $ isFixed     : Named logi [1:11] FALSE FALSE FALSE FALSE FALSE FALSE ... #>   ..- attr(*, \"names\")= chr [1:11] \"algorithm\" \"localsearch\" \"alpha\" \"beta\" ... #>  $ transform   :List of 11 #>   ..$ algorithm  : chr \"\" #>   ..$ localsearch: chr \"\" #>   ..$ alpha      : chr \"\" #>   ..$ beta       : chr \"\" #>   ..$ rho        : chr \"\" #>   ..$ ants       : chr \"log\" #>   .. ..- attr(*, \"lower\")= num 0 #>   .. ..- attr(*, \"upper\")= num 4.62 #>   ..$ q0         : chr \"\" #>   ..$ rasrank    : chr \"\" #>   ..$ elitistants: chr \"\" #>   ..$ nnls       : chr \"\" #>   ..$ dlb        : chr \"\" #>  $ isDependent : Named logi [1:11] FALSE FALSE FALSE FALSE FALSE FALSE ... #>   ..- attr(*, \"names\")= chr [1:11] \"algorithm\" \"localsearch\" \"alpha\" \"beta\" ... #>  $ depends     :List of 11 #>   ..$ algorithm  : chr(0)  #>   ..$ localsearch: chr(0)  #>   ..$ alpha      : chr(0)  #>   ..$ beta       : chr(0)  #>   ..$ rho        : chr(0)  #>   ..$ ants       : chr(0)  #>   ..$ q0         : chr \"algorithm\" #>   ..$ rasrank    : chr \"algorithm\" #>   ..$ elitistants: chr \"algorithm\" #>   ..$ nnls       : chr \"localsearch\" #>   ..$ dlb        : chr \"localsearch\" #>  $ hierarchy   : Named num [1:11] 1 1 1 1 1 1 2 2 2 2 ... #>   ..- attr(*, \"names\")= chr [1:11] \"algorithm\" \"localsearch\" \"alpha\" \"beta\" ... #>  $ nbParameters: int 11 #>  $ nbFixed     : int 0 #>  $ nbVariable  : int 11"},{"path":"https://mlopez-ibanez.github.io/irace/reference/removeConfigurationsMetaData.html","id":null,"dir":"Reference","previous_headings":"","what":"removeConfigurationsMetaData — removeConfigurationsMetaData","title":"removeConfigurationsMetaData — removeConfigurationsMetaData","text":"Remove columns \"metadata\" data frame containing configurations. Currently, metadata corresponds column names starting period.  function used printing configurations output values parameters configuration without metadata possibly useless user.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/removeConfigurationsMetaData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"removeConfigurationsMetaData — removeConfigurationsMetaData","text":"","code":"removeConfigurationsMetaData(configurations)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/removeConfigurationsMetaData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"removeConfigurationsMetaData — removeConfigurationsMetaData","text":"configurations (data.frame)  Parameter configurations target algorithm (one per row).","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/removeConfigurationsMetaData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"removeConfigurationsMetaData — removeConfigurationsMetaData","text":"data frame without \"metadata\".","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/removeConfigurationsMetaData.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"removeConfigurationsMetaData — removeConfigurationsMetaData","text":"Manuel López-Ibáñez Jérémie Dubois-Lacoste","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/scenario_update_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Update filesystem paths of a scenario consistently. — scenario_update_paths","title":"Update filesystem paths of a scenario consistently. — scenario_update_paths","text":"function used change filesystem paths stored scenario object. Useful moving scenario one computer another.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/scenario_update_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update filesystem paths of a scenario consistently. — scenario_update_paths","text":"","code":"scenario_update_paths(scenario, from, to, fixed = TRUE)  scenario.update.paths(scenario, from, to, fixed = TRUE)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/scenario_update_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update filesystem paths of a scenario consistently. — scenario_update_paths","text":"scenario (list())  Data structure containing irace settings. data structure one returned function defaultScenario() readScenario(). character string containing regular expression (character string fixed = TRUE) matched. replacement string.character string. fixed = FALSE can include backreferences \"\\1\" \"\\9\" parenthesized subexpressions . fixed logical.  TRUE, string matched .","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/scenario_update_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update filesystem paths of a scenario consistently. — scenario_update_paths","text":"updated scenario","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/scenario_update_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update filesystem paths of a scenario consistently. — scenario_update_paths","text":"","code":"if (FALSE) { scenario <- readScenario(filename = \"scenario.txt\") scenario <- scenario_update_paths(scenario, from = \"/home/manuel/\", to = \"/home/leslie\") }"},{"path":"https://mlopez-ibanez.github.io/irace/reference/target.evaluator.default.html","id":null,"dir":"Reference","previous_headings":"","what":"target.evaluator.default — target.evaluator.default","title":"target.evaluator.default — target.evaluator.default","text":"target.evaluator.default default targetEvaluator function invoked targetEvaluator string (default targetEvaluator NULL function invoked). can use advanced example create targetEvaluator function.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/target.evaluator.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"target.evaluator.default — target.evaluator.default","text":"","code":"target.evaluator.default(   experiment,   num.configurations,   all.conf.id,   scenario,   target.runner.call )"},{"path":"https://mlopez-ibanez.github.io/irace/reference/target.evaluator.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"target.evaluator.default — target.evaluator.default","text":"experiment list describing experiment. contains least: id.configuration alphanumeric string uniquely identifies configuration; id.instance alphanumeric string uniquely identifies instance; seed Seed random number generator used evaluation, ignore seed deterministic algorithms; instance String giving instance used evaluation; bound (capping enabled) Time bound execution; configuration 1-row data frame column per parameter name; switches Vector parameter switches (labels) order parameters used configuration. num.configurations Number  configurations alive race. .conf.id Vector configuration IDs alive configurations. scenario (list())  Data structure containing irace settings. data structure one returned function defaultScenario() readScenario(). target.runner.call String describing call targetRunner corresponds call targetEvaluator. used providing extra information user, example, case targetEvaluator fails.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/target.evaluator.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"target.evaluator.default — target.evaluator.default","text":"function targetEvaluator must return list one element \"cost\", numerical value corresponding cost measure given configuration given instance. return list may also contain following optional elements used irace reporting errors targetEvaluator: error string used report error; outputRaw string used report raw output calls external program function; call string used report targetRunner called external program function.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/target.evaluator.default.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"target.evaluator.default — target.evaluator.default","text":"Manuel López-Ibáñez Jérémie Dubois-Lacoste","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/target.runner.default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default targetRunner function. — target.runner.default","title":"Default targetRunner function. — target.runner.default","text":"Use advanced example create targetRunner function.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/target.runner.default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default targetRunner function. — target.runner.default","text":"","code":"target.runner.default(experiment, scenario)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/target.runner.default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default targetRunner function. — target.runner.default","text":"experiment list describing experiment. contains least: id.configuration alphanumeric string uniquely identifies configuration; id.instance alphanumeric string uniquely identifies instance; seed Seed random number generator used evaluation, ignore seed deterministic algorithms; instance String giving instance used evaluation; bound (capping enabled) Time bound execution; configuration 1-row data frame column per parameter name; switches Vector parameter switches (labels) order parameters used configuration. scenario (list())  Data structure containing irace settings. data structure one returned function defaultScenario() readScenario().","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/target.runner.default.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Default targetRunner function. — target.runner.default","text":"targetEvaluator NULL, targetRunner function must return list least one element \"cost\", numerical value corresponding evaluation given configuration given instance. scenario option maxTime non-zero capping enabled list must contain least another element \"time\" reports execution time call targetRunner. return list may also contain following optional elements used irace reporting errors targetRunner: error string used report error; outputRaw string used report raw output calls external program function; call string used report targetRunner called external program function.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/target.runner.default.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Default targetRunner function. — target.runner.default","text":"Manuel López-Ibáñez Jérémie Dubois-Lacoste","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/testConfigurations.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute the given configurations on the testing instances specified in the\nscenario — testConfigurations","title":"Execute the given configurations on the testing instances specified in the\nscenario — testConfigurations","text":"Execute given configurations testing instances specified scenario","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/testConfigurations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute the given configurations on the testing instances specified in the\nscenario — testConfigurations","text":"","code":"testConfigurations(configurations, scenario, parameters)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/testConfigurations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute the given configurations on the testing instances specified in the\nscenario — testConfigurations","text":"configurations (data.frame)  Parameter configurations target algorithm (one per row). scenario (list())  Data structure containing irace settings. data structure one returned function defaultScenario() readScenario(). parameters (list())  Data structure containing parameter space definition. data structure similar one returned function readParameters.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/testConfigurations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Execute the given configurations on the testing instances specified in the\nscenario — testConfigurations","text":"list following elements: experiments Experiments results. seeds Array instance seeds used experiments.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/testConfigurations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Execute the given configurations on the testing instances specified in the\nscenario — testConfigurations","text":"test instance set must provided scenario[[\"testInstances\"]].","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/testConfigurations.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Execute the given configurations on the testing instances specified in the\nscenario — testConfigurations","text":"Manuel López-Ibáñez","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/testing_fromfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Test configurations given an explicit table of configurations and a scenario file — testing_fromfile","title":"Test configurations given an explicit table of configurations and a scenario file — testing_fromfile","text":"Executes testing explicit list configurations given filename (format readConfigurationsFile()). logFile created unless disabled scenario. may overwrite existing one!","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/testing_fromfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test configurations given an explicit table of configurations and a scenario file — testing_fromfile","text":"","code":"testing_fromfile(filename, scenario)"},{"path":"https://mlopez-ibanez.github.io/irace/reference/testing_fromfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test configurations given an explicit table of configurations and a scenario file — testing_fromfile","text":"filename Path file containing configurations: one configuration per line, one parameter per column, parameter names header. scenario (list())  Data structure containing irace settings. data structure one returned function defaultScenario() readScenario().","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/testing_fromfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test configurations given an explicit table of configurations and a scenario file — testing_fromfile","text":"iraceResults","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/testing_fromfile.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test configurations given an explicit table of configurations and a scenario file — testing_fromfile","text":"Manuel López-Ibáñez","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/testing_fromlog.html","id":null,"dir":"Reference","previous_headings":"","what":"Test configurations given in .Rdata file — testing_fromlog","title":"Test configurations given in .Rdata file — testing_fromlog","text":"testing_fromlog executes testing target algorithm configurations found irace execution.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/testing_fromlog.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test configurations given in .Rdata file — testing_fromlog","text":"","code":"testing_fromlog(   logFile,   testNbElites,   testIterationElites,   testInstancesDir,   testInstancesFile,   testInstances )"},{"path":"https://mlopez-ibanez.github.io/irace/reference/testing_fromlog.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test configurations given in .Rdata file — testing_fromlog","text":"logFile Path .Rdata file produced irace. testNbElites Number (final) elite configurations test. Overrides value found logFile. testIterationElites (logical(1)) FALSE, final testNbElites configurations tested; otherwise, also test best configurations iteration. Overrides value found logFile. testInstancesDir Directory testing instances located, either absolute relative current directory. testInstancesFile File containing list test instances optionally additional parameters . testInstances Character vector instances used targetRunner executing testing.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/testing_fromlog.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test configurations given in .Rdata file — testing_fromlog","text":"Boolean. TRUE testing ended successfully otherwise, FALSE.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/reference/testing_fromlog.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Test configurations given in .Rdata file — testing_fromlog","text":"function testing_fromlog loads logFile obtains testing setup configurations tested.  Within logFile, variable scenario$testNbElites specifies many final elite configurations test scenario$testIterationElites indicates whether test best configuration iteration. values may overridden setting corresponding arguments function.  set testing instances must appear scenario[[\"testInstances\"]].","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/reference/testing_fromlog.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Test configurations given in .Rdata file — testing_fromlog","text":"Manuel López-Ibáñez Leslie Pérez Cáceres","code":""},{"path":[]},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"new-features-and-improvements-3-5-1","dir":"Changelog","previous_headings":"","what":"New features and improvements","title":"irace 3.5.1","text":"Ablation report configurations produced results, points parameter values effect target algorithm, possibly indicating bug target algorithm. New option instancesFile ablation() using either training instances, test instances reading instances given file. New option nrep ablation() specifies number replications per instance used \"full\" ablation. replaces previous parameter n_instances, whose definition difficult use correctly. Adaptive capping now enabled default maxTime > 0 maxBound > 0. can disabled --capping 0 capping=0. See https://iridia-ulb.github.io/references/#PerLopHooStu2017:lion details. (Leslie Pérez Cáceres, Manuel López-Ibáñez) Matrix operations faster thanks matrixStats. (Manuel López-Ibáñez) scenario option targetRunnerLauncherArgs, introduced version 3.5, removed replaced targetCmdline, flexible (Fixes #38). Please see user-guide details. (Manuel López-Ibáñez) New scenario option blockSize defining blocks instances. Configurations eliminated evaluating complete block never middle block. useful scenarios clearly defined instance classes best configuration balanced among . case, trainInstancesFile written block contain one instance class blockSize set number classes. (Manuel López-Ibáñez) plotAblation() several new options: (Manuel López-Ibáñez) type='rank' plot ranks per instance instead raw cost values. n limit number parameters shown plot. previously internal function check.output.target.runner renamed check_output_target_runner exported allow users write targetRunnerParallel check output repair possible. (Deyao Chen) New function read_ablogfile(). (Manuel López-Ibáñez)","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"fixes-3-5-1","dir":"Changelog","previous_headings":"","what":"Fixes","title":"irace 3.5.1","text":"Fix (#44): irace now give error domain real-valued (r) parameters change depending value 'digits'. solution increase value 'digits' adjust domain. (Manuel López-Ibáñez, reported @mb706) scenario option targetRunnerParallel set, irace longer tries initialize parallel environment setup MPI. now responsibility user calling irace within function assigned targetRunnerParallel. (Manuel López-Ibáñez) set option(error=utils::recover()) debug mode avoid issues calling irace Python. user can set desired. (Manuel López-Ibáñez)","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-35","dir":"Changelog","previous_headings":"","what":"irace 3.5","title":"irace 3.5","text":"CRAN release: 2022-10-23","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"new-features-and-improvements-3-5","dir":"Changelog","previous_headings":"","what":"New features and improvements","title":"irace 3.5","text":"Handling dependent parameter domains: specified parameter domain definition , now, numerical parameter can define dependent domains. numerical domain can dependent one bound, e.g. (1, \"param1*2\"), dependent bound can include basic arithmetic operators. (Leslie Pérez Cáceres, Manuel López-Ibáñez) package now provides ablation executable (ablation.exe Windows) makes easier perform ablation analysis without R knowledge. interface functions ablation() plotAblation() simplified. ablation() function now allows overriding scenario settings. plotAblation() function create plot ablation log contain complete ablation. (Manuel López-Ibáñez) argument n.instances ablation() renamed n_instances now factor multiplies scenario$firstTest. (Manuel López-Ibáñez) New command-line option --quiet run without producing output except errors (also available scenario option). (Manuel López-Ibáñez) New command-line option --init initialize scenario. (Deyao Chen) Added support HTCondor cluster framework --batchmode. (Filippo Bistaffa) --check now also check contents configurationsFile runs configurations provided via initConfigurations. (Manuel López-Ibáñez, reported Andreea Avramescu) New scenario options targetRunnerLauncher targetRunnerLauncherArgs help cases target-runner must invoked via another software particular options (python.exe Windows). (Manuel López-Ibáñez) New scenario option minMeasurableTime. (Manuel López-Ibáñez) error produced variable set scenario file known irace. scenario file contains R code, use variable names beginning dot '.', ignored irace. (Manuel López-Ibáñez) Plotting functions moved new package iraceplot. particular, configurationsBoxplot() replaced iraceplot::boxplot_training() iraceplot::boxplot_test(); parallelCoordinatesPlot() replaced iraceplot::parallel_cat() iraceplot::parallel_coord(); parameterFrequency() replaced iraceplot::sampling_frequency(). (Leslie Pérez Cáceres, Manuel López-Ibáñez) user-guide now contains detailed section “Hyper-parameter optimization machine learning methods”. (Manuel López-Ibáñez) testType=\"F-test\" two configurations remain, elimination test now uses pseudo-median estimated Wilcoxon signed-rank test decide configuration best one instead comparing median difference. (Manuel López-Ibáñez) New functions testing_fromlog() testing_fromfile() independently executing testing phase. function testing.main() removed superseded new ones. (Manuel López-Ibáñez) New function read_logfile() easily read log file produced irace. (Manuel López-Ibáñez) New function printParameters() prints parameters R object valid input text. (Manuel López-Ibáñez) irace2pyimp moved R package. (Manuel López-Ibáñez) Generating file irace.Rdata may disabled setting logFile=\"\". (Manuel López-Ibáñez, reported Johann Dreo) path_rel2abs() checkParameters() now exported packages may use . (Manuel López-Ibáñez) path_rel2abs() also searches system paths. (Manuel López-Ibáñez) readConfigurationsFile() now detect duplicated configurations error. (Manuel López-Ibáñez) interface functions getFinalElites(), getConfigurationById() getConfigurationByIteration() simplified. package provides irace.sindef file may used building standalone container irace using Singularity. See README.md file instructions. (Contributed Johann Dreo) New example examples/target-runner-python/target-runner-python-win.bat contributed Levi Ribeiro. New helper script bin/parallel-irace-slurm launch irace SLURM computer clusters. (Manuel López-Ibáñez) Rename scenario.update.paths() scenario_update_paths(). old name deprecated. (Manuel López-Ibáñez)","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"fixes-3-5","dir":"Changelog","previous_headings":"","what":"Fixes","title":"irace 3.5","text":"Correctly handle clear -performance cases despite strong bi-modality. (Reported Nguyen Dang, fixed Manuel López-Ibáñez) Fix error recovering parallel run Windows. (Manuel López-Ibáñez, reported Tarek Gamal) testNbElites now controls many iteration elites tested testIterationElites=1. documented behavior user guide. (Manuel López-Ibáñez, reported Marcelo de Souza) Fixes Matlab example. (Manuel López-Ibáñez) default testType now set t-test capping enabled. (Manuel López-Ibáñez, reported Jovana Radjenovic) Fix various issues user guide. (Manuel López-Ibáñez, reported Jovana Radjenovic) Remove duplicated elites. (Manuel López-Ibáñez, reported Federico Naldini) Fix (#7): warnings partial matched parameters. (Manuel López-Ibáñez, reported Marc Becker) Fix (#10): wrong assert elitist=0. (Manuel López-Ibáñez) Fix (#12): irace can run FastR. Fix (#13): Maximum number configurations immediately rejected reached. (Manuel López-Ibáñez) Fix: setting scenario file command-line, scenarioFile set correctly. correct scenario used, however, debug output value stored log / recovery file wrong. (Manuel López-Ibáñez, reported Richard Schoonhoven) sampleInstances = FALSE, elitist irace change order instances already seen. However, want make sure order instances enforced, also need set elitistNewInstances=0. function irace.usage() removed. really useful R users result can obtained calling irace.cmdline(\"--help\"). (Manuel López-Ibáñez)","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-341-31032020","dir":"Changelog","previous_headings":"","what":"irace 3.4.1 (31/03/2020)","title":"irace 3.4.1 (31/03/2020)","text":"CRAN release: 2020-03-31 NEWS converted markdown. Fix CRAN error Solaris.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-34-30032020","dir":"Changelog","previous_headings":"","what":"irace 3.4 (30/03/2020)","title":"irace 3.4 (30/03/2020)","text":"CRAN release: 2020-03-30 irace2pyimp function executable (irace2pyimp.exe Windows) convert .Rdata files generated irace input files required parameter importance analysis tool PyImp (https://github.com/automl/ParameterImportance). (Nguyen Dang, Manuel López-Ibáñez) Initial configurations may also provided directly R using scenario$initConfigurations (Manuel López-Ibáñez) Rdata files saved version 2 keep compatibility older R versions. (Manuel López-Ibáñez) Fix invalid assert ordered parameters: (Leslie Pérez Cáceres) irace executable (irace.exe Windows) compiled binary instead script. Windows, irace.exe replaces irace.bat (Manuel López-Ibáñez) inst/examples/Spear contains Spear (SAT solver) configuration scenario. (Manuel López-Ibáñez) Fixed bug reporting minimum maxTime required. (Reported Luciana Salete Buriol, fixed Manuel López-Ibáñez) Fixed bug detected assert: (Reported Maxim Buzdalov, fixed Manuel López-Ibáñez)","code":"value >= 1L && value <= length(possibleValues) is not TRUE all(apply(!is.na(elite.data$experiments), 1, any)) is not TRUE"},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-33-26042019","dir":"Changelog","previous_headings":"","what":"irace 3.3 (26/04/2019)","title":"irace 3.3 (26/04/2019)","text":"CRAN release: 2019-04-26 Fix buggy test breaks CRAN. (Manuel López-Ibáñez) print “23:59:59” wall-clock time actually close zero. (Manuel López-Ibáñez)","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-32-24042019","dir":"Changelog","previous_headings":"","what":"irace 3.2 (24/04/2019)","title":"irace 3.2 (24/04/2019)","text":"CRAN release: 2019-04-24 Fix irace --check --parallel 2 Windows. (Manuel López-Ibáñez) Values real-valued parameter now printed sufficient precision satisfy digits (digits=15). (Manuel López-Ibáñez) possible specify boundMax without capping. (Leslie Pérez Cáceres, Manuel López-Ibáñez) irace --check exit code 1 check unsuccessful (Manuel López-Ibáñez) Print irace installed --help. (Manuel López-Ibáñez) irace now complain output target-runner target-evaluator contains extra lines even first line output correct. avoid parsing wrong output. Unfortunately, may break setups relied behavior. solution print output irace expects. (Manuel López-Ibáñez) Completely re-implement log parameters fix several bugs. Domains contain zero negative values now rejected. (Leslie Pérez Cáceres, Manuel López-Ibáñez) New option aclib= (--aclib 1) enables compatibility GenericWrapper4AC (https://github.com/automl/GenericWrapper4AC/) used AClib (http://aclib.net/). EXPERIMENTAL. --aclib 1 also sets digits 15 compatibility AClib defaults. (Manuel López-Ibáñez) Fix printing output capping enabled. (Manuel López-Ibáñez) checkTargetFiles() (--check) samples instance unless sampleInstances FALSE. (Manuel López-Ibáñez) Fix symbol printed elimination test. (Manuel López-Ibáñez) Use dynGet() find targetRunner targetEvaluator. result, now require R >= 3.2. (Manuel López-Ibáñez) tests now use testthat. (Manuel López-Ibáñez) New function scenario.update.paths() (Manuel López-Ibáñez) Fix assert failure may happen elitistNewInstances larger firstTest. Reported Jose Riveaux. (Manuel López-Ibáñez) Fix bug checkTargetFiles() (--check) capping. (Leslie Pérez Cáceres) Clarify errors/warnings maxTime > 0. (Manuel López-Ibáñez, suggested Haroldo Gambini Santos)","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-31-12072018","dir":"Changelog","previous_headings":"","what":"irace 3.1 (12/07/2018)","title":"irace 3.1 (12/07/2018)","text":"CRAN release: 2018-07-12 Use testthat unit testing. (Manuel López-Ibáñez) Allow instances list arbitrary R objects (mlr bugfix). (Manuel López-Ibáñez)","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-30-05072018","dir":"Changelog","previous_headings":"","what":"irace 3.0 (05/07/2018)","title":"irace 3.0 (05/07/2018)","text":"CRAN release: 2018-07-05 irace now supports adaptive capping computation time minimization. default value testType option t-test adaptive capping enabled. Please see user-guide details. (Leslie Pérez Cáceres, Manuel López-Ibáñez) package contains ablation() function implementing ablation method parameter importance analysis Fawcett Hoos (2016). (Leslie Pérez Cáceres, Manuel López-Ibáñez) New option postselection executes post-selection race. (Leslie Pérez Cáceres) end race, race stops evaluating instances seen previous races, best overall may different best race. now print best overall (best--far). Elites evaluated instances considered better evaluated fewer. (Manuel López-Ibáñez, Leslie Pérez Cáceres) Last active parameter values numerical parameters (r) carried sampling model. value must assigned parameter previously active, sampling performed around last value. (Leslie Pérez Cáceres, Manuel López-Ibáñez) R help pages now generated Roxygen2. (Leslie Pérez Cáceres, Manuel López-Ibáñez) user guide documents --version, --help, --check. (Manuel López-Ibáñez) return value Inf targetRunner/targetEvaluation results immediate rejection configuration without evaluation. useful handling unreliable broken configurations stop irace. (Manuel López-Ibáñez) Numerical parameters may sampled logarithmic scale using ,log r,log. (Alberto Franzin) New target-runner.bat Windows contributed André de Souza Andrade. Fixed shell scripts calling functions defining , portable. (Manuel López-Ibáñez) Fixed --parallel bug Windows resulted Error checkForRemoteErrors(val). (Manuel López-Ibáñez) Improve error message training instances given. (Manuel López-Ibáñez)","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-24-03082017","dir":"Changelog","previous_headings":"","what":"irace 2.4 (03/08/2017)","title":"irace 2.4 (03/08/2017)","text":"CRAN release: 2017-08-03 output irace now specifies order, , configurations printed. (Manuel López-Ibáñez, suggested Markus Wagner) Several fixes handling paths Windows. (Manuel López-Ibáñez) readConfigurationsFile() now text= argument, allows reading configurations string. (Manuel López-Ibáñez) User-provided functions (targetRunner, targetEvaluator repairConfiguration) user-provided conditions forbidden configurations now byte-compiled read, make evaluation noticeably faster. (Manuel López-Ibáñez) argument 'experiment' passed R function targetRunner contain anymore element 'extra.params'. Similarly, 'scenario' structure contain anymore elements 'instances.extra.params' 'testInstances.extra.params'. instance-specific parameters values now form part character string defines instance user-defined targetRunner parse appropriately. changes make difference targetRunner external script, instances instance-specific parameter values read file. (Manuel López-Ibáñez)","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-23","dir":"Changelog","previous_headings":"","what":"irace 2.3","title":"irace 2.3","text":"CRAN release: 2017-04-26 Fix bug cause iraceResults$experimentLog count calls targetEvaluator experiments, even call targetRunner performed. affect computation budget consumed , thus, affect termination criteria irace. bug triggers assertion terminates irace, thus run successful version 2.2 affected. (Manuel López-Ibáñez)","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-22","dir":"Changelog","previous_headings":"","what":"irace 2.2","title":"irace 2.2","text":"CRAN release: 2017-03-24 Command-line parameters printed stdout (useful future replications). (Manuel López-Ibáñez, suggested Markus Wagner) Users may provide function repair configurations evaluated. See scenario variable repairConfiguration. (Manuel López-Ibáñez) option --sge-cluster (sgeCluster) removed replaced --batchmode (batchmode). now responsibility target-runner parse output batch job submission command (e.g., qsub squeue), return just job ID. Values supported : “sge”, “torque”, “pbs” “slurm”. (Manuel López-Ibáñez) option --parallel can now combined --batchmode limit number jobs submitted irace . may useful batch clusters small queue jobs. (Manuel López-Ibáñez) New examples inst/examples/batchmode-cluster/. (Manuel López-Ibáñez) now possible include scenario definition files scenario files using: feature experimental syntax likely change future. (Manuel López-Ibáñez) Fix bug re-executed elite results circumstances. (Leslie Pérez Cáceres) Restrict number maximum configurations per race 1024. (Leslie Pérez Cáceres) warn last line instance file terminate newline. (Manuel López-Ibáñez) Fix bug deterministic == 1. (Manuel López-Ibáñez, Leslie Pérez Cáceres) Update manual vignette details expected arguments return value targetRunner targetEvaluator. (Manuel López-Ibáñez) Many updates User Guide vignette. (Manuel López-Ibáñez) Fix \\dontrun example irace-package.Rd (Manuel López-Ibáñez) Fix bug: testInstances contains duplicates, results testing correctly saved iraceResults$testing$experiments reported correctly end run. Now unique IDs form 1t, 2t, ... used testing instance. IDs used rownames iraceResults$testing$experiments names scenario$testInstances iraceResults$testing$seeds vectors. (Manuel López-Ibáñez) Fix bug irace keeps retrying target-runner call even succeeds. (Manuel López-Ibáñez) New command-line parameter just evaluates configurations given FILE testing instances defined scenario. Useful decide testing instances running irace. (Manuel López-Ibáñez) Bugfix: using maxTime != 0, number experiments performed may miscounted cases. (Manuel López-Ibáñez)","code":"eval.parent(source(\"scenario-common.txt\", chdir = TRUE, local = TRUE)) --only-test FILE"},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-21","dir":"Changelog","previous_headings":"","what":"irace 2.1","title":"irace 2.1","text":"CRAN release: 2016-10-18 Fix CRAN errors tests. (Manuel López-Ibáñez) Avoid generating many configurations initial time estimation small. (Manuel López-Ibáñez)","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-20","dir":"Changelog","previous_headings":"","what":"irace 2.0","title":"irace 2.0","text":"CRAN release: 2016-10-08 Minimum R version 2.15. Elitist irace default, can disabled parameter --elitist 0. (Leslie Pérez Cáceres, Manuel López-Ibáñez) parameter --test-type gains two additional values: (Manuel López-Ibáñez) t-test-bonferroni (t-test Bonferroni’s correction multiple comparisons), t-test-holm (t-test Holm’s correction multiple comparisons) MPI create log files --debug-level 0. (Manuel López-Ibáñez) simplicity, parallel-irace-* scripts use auxiliary tune-main script. customizing , make copy edit directly. (Manuel López-Ibáñez) New parameters: (Manuel López-Ibáñez) print diversity measures evaluating instance: (Leslie Pérez Cáceres) Kendall’s W (also known Kendall’s coefficient concordance) 1, candidates ranked order instances. 0, ranking candidate instance essentially random. Spearman’s rho: average (Spearman) correlation coefficient computed ranks pairs raters. repeated data values, perfect Spearman correlation +1 -1 occurs variables perfect monotone function . Many internal external interfaces changed. example, now consistently use ‘scenario’ denote settings passed irace ‘configuration’ instead ‘candidate’ denote parameter settings passed target algorithm. changes : Minimal example configuring MATLAB program (thanks Esteban Diaz Leiva) Paths files directories given scenario file relative scenario file (except --log-file, output file relative --exec-dir). Paths given command-line relative current working directory. Given irace search \"./scenario/target-runner\", given irace search \"./target-runner\". (Manuel López-Ibáñez) New command-line wrapper Windows installed system.file(\"bin/irace.bat\", package=\"irace\") (thanks Anthony Antoun) Budget can specified maximum time (maxTime, --max-time) consumed target algorithm. See documentation details handled. (Leslie Pérez Cáceres, Manuel López-Ibáñez)","code":"--target-runner-retries : Retry target-runner this many times in case of error. W = Friedman / (m * (k-1)) parameters$boundary -> parameters$domain    hookRun             -> targetRunner    hookEvaluate        -> targetEvaluator    tune-conf           -> scenario.txt    instanceDir         -> trainInstancesDir    instanceFile        -> trainInstancesFile    testInstanceDir     -> testInstancesDir    testInstanceFile    -> testInstancesFile $ cat scenario/scenario.txt       targetRunner <- \"./target-runner\"       $ irace -s scenario/scenario.txt $ irace -s scenario/scenario.txt --target-runner ./target-runner"},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-107","dir":"Changelog","previous_headings":"","what":"irace 1.07","title":"irace 1.07","text":"CRAN release: 2015-09-11 best configurations found, either end iteration irace run, can now applied set test instances different training instances. See options testInstanceDir, testInstanceFile, testNbElites, testIterationElites. (Leslie Pérez Cáceres, Manuel López-Ibáñez) R interfaces hookRun, hookEvaluate hookRunParallel changed. See help(hook.run.default) help(hook.evaluate.default) examples new interfaces. Printing race progress now reports actual configuration instance IDs, numbers printed human-readable format. (Leslie Pérez Cáceres, Manuel López-Ibáñez) Reduce memory use large values maxExperiments. (Manuel López-Ibáñez, thanks Federico Caselli identifying issue) New option --load-balancing (loadBalancing) disabling load-balancing executing jobs parallel. Load-balancing makes better use computing resources, increases communication overhead. overhead large, disabling load-balancing may faster. (Manuel López-Ibáñez, thanks Federico Caselli identifying issue) option --parallel Windows now uses load-balancing default. (Manuel López-Ibáñez) wall-clock time finishing task printed output. (Manuel López-Ibáñez, thanks Federico Caselli providing initial patch)","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-106","dir":"Changelog","previous_headings":"","what":"irace 1.06","title":"irace 1.06","text":"CRAN release: 2014-11-26 Fix bug introduce spurious whitespace printing final configurations. (Manuel López-Ibáñez) Fix bug initial candidates needed first race. (Leslie Pérez Cáceres, Manuel López-Ibáñez) New configuration options, mainly R users: hookRunParallel: Optional R function provide custom parallelization hook.run. hookRunData: Optional data passed hookRun. ignored default hookRun function, may used custom hookRun R functions pass persistent data around. (Manuel López-Ibáñez)","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-105","dir":"Changelog","previous_headings":"","what":"irace 1.05","title":"irace 1.05","text":"CRAN release: 2014-07-10 New option --version. (Manuel López-Ibáñez) Terminate early sufficient budget run irace given settings. (Manuel López-Ibáñez) option --parallel (without --mpi) now works Windows. (Manuel López-Ibáñez, thanks Pablo Valledor Pellicer testing ) Improved error handling running Rmpi. Now irace terminate soon master node detects least one failed slave node. avoids irace reporting two times error. Also, irace print unique errors returned slaves just first one. (Manuel López-Ibáñez) Forbidden configurations may specified terms constraints values. Forbidden configurations never evaluated irace. See --forbidden-file inst/templates/forbidden.tmpl. (Manuel López-Ibáñez) New option --recovery-file (recoveryFile) allows resuming previous irace run. (Leslie Pérez Cáceres) confidence level elimination test now configurable parameter --confidence. (Leslie Pérez Cáceres) Much robust handling relative/absolute paths. Improved support Windows. (Leslie Pérez Cáceres, Manuel López-Ibáñez) Provide better error messages incorrect parameter descriptions. (Manuel López-Ibáñez) Examples: Print elapsed time calls hook-run debugLevel >=1. (Manuel López-Ibáñez) examples/hook-run-python/hook-run: multi-purpose hook-run written Python. (Franco Mascia) Parallel mode SGE cluster (--sge-cluster) robust. (Manuel López-Ibáñez)","code":"x \"\" i (0, 0)       # lower and upper bounds are the same     x \"\" r (1e-4, 5e-4) # given digits=2, ditto     x \"\" i (-1, -2)     # lower bound must be smaller than upper bound     x \"\" c (\"a\", \"a\")   # duplicated values"},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-104","dir":"Changelog","previous_headings":"","what":"irace 1.04","title":"irace 1.04","text":"CRAN release: 2013-06-09 Replace obsolete package multicore package parallel (requires R >= 2.14.0) Use load-balancing (mc.preschedule = FALSE) mclapply.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-103","dir":"Changelog","previous_headings":"","what":"irace 1.03","title":"irace 1.03","text":"CRAN release: 2013-01-15 Use reg.finalizer finish Rmpi properly without clobbering .Last(). Remove uses deprecated .real(). Nicer error handling readParameters(). Add hypervolume (multi-objective) example. Fix several bugs computation similar candidates.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-102","dir":"Changelog","previous_headings":"","what":"irace 1.02","title":"irace 1.02","text":"CRAN release: 2012-10-12 concise output. parameters expName expDescription now useless removed. Faster computation similar candidates (Jeremie Dubois-Lacoste Leslie Pérez Cáceres). Fix bug saving instances tunerResults$experiments. irace.cmdline (\"--help\") try quit R anymore.","code":""},{"path":"https://mlopez-ibanez.github.io/irace/news/index.html","id":"irace-101","dir":"Changelog","previous_headings":"","what":"irace 1.01","title":"irace 1.01","text":"CRAN release: 2012-03-19 Fix bug caused file.exists (possibly functions) handling directory names trailing backslash slash Windows. Fix bug using per-instance parameters (Leslie Pérez Cáceres). Fix bug reading initial candidates file.","code":""}]
